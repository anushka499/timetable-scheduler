{"version":3,"sources":["components/Logo/activity.png","components/Logo/Logo.js","components/Home/Appbar.js","constants/docs.js","components/Home/InputCards/subjectInput.js","components/Home/InputCards/sectionInput.js","components/Home/InputCards/teacherInput.js","components/Home/Tables/subjectTable.js","components/Home/Tables/sectionTable.js","components/Home/Tables/teacherTable.js","components/Home/lectures/lectureInput.js","components/Home/lectures/lectureTable.js","components/Home/InputCards/workingtimeInput.js","components/Home/Tables/workingtimeTable.js","components/Home/timetable.js","components/Home/home.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyle","makeStyles","theme","root","display","justifyContent","breakpoints","up","margin","marginTop","Tilt","background","borderRadius","boxShadow","down","alignItems","width","Logo","classes","className","options","max","style","height","src","activity","paddingTop","alt","useStyles","grow","flexGrow","title","sectionDesktop","sectionMobile","PrimaryAppBar","React","useState","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","IconButton","aria-label","aria-haspopup","color","firebase","auth","currentUser","displayName","onClick","signOut","AppBar","position","Toolbar","Typography","variant","noWrap","edge","console","log","event","currentTarget","docs","subjects","sections","teachers","lectures","workingTime","timeTable","minHeight","fontSize","textField","hrs","hours","button","SubjectInput","setSubjects","setTitle","code","setCode","contactHrs","setcontantHrs","creditHrs","setcreditHrs","titleError","setTitleError","codeError","setCodeError","contantHrsError","setcontantHrsError","creditHrsError","setcreditHrsError","setRequiredError","addButton","temp","findIndex","e","push","Card","TextField","onChange","target","value","required","id","label","error","helperText","type","select","InputLabelProps","shrink","map","option","key","onKeyDown","keyCode","Button","size","SectionInput","setSections","TeacherInput","setTeachers","name","setName","nameError","setNameError","createData","contantHrs","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","props","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingLeft","spacing","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","flex","EnhancedTableToolbar","selected","setSelected","clsx","component","Tooltip","forEach","element","splice","paper","marginBottom","table","border","clip","overflow","top","SubjectTable","rows","subject","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-labelledby","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","SectionTable","section","TeacherTable","teacher","minWidth","content","marginLeft","lectureArrangement","LectureInput","setLectures","setsubject","setsection","setteacher","lectureArr","setlectureArr","subjectError","setsubjectError","sectionError","setsectionError","teacherError","setteacherError","lecturearrError","setlecturearrError","subjectIndex","CardContent","textAlign","disabled","arrangement","lectureID","LectureTable","lecture","WorkingtimeInput","setworkingTime","day","setday","period","setperiod","dayError","setdayError","periodError","setperiodError","Object","entries","filter","WorkingtimeTable","time","lectureCount","StyledTableCell","withStyles","head","common","black","white","body","StyledTableRow","action","weekDays","Timetable","i","r","j","cardHolder","flexFlow","genButton","wrapper","buttonProgress","weekSchedule","MON","TUE","WED","THU","FRI","SAT","Home","userRef","firestore","collection","uid","loading","setloading","undefined","timetable","settimetable","updateDB","sub","docType","doc","set","then","catch","fetchTimetable","useCallback","db","FieldPath","documentId","onSnapshot","snapshot","empty","lecSec","snap","values","data","fetchRecords","get","snapShot","records","useEffect","card","requestOptions","method","headers","JSON","stringify","userID","fetch","response","json","CircularProgress","keys","sec","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","particlesOptions","particles","number","density","enable","value_area","App","state","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","componentDidMount","onAuthStateChanged","user","setState","this","params","firebaseAuth","Component","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"qHAAAA,EAAOC,QAAU,IAA0B,sC,mUCKrCC,EAAWC,aAAW,SAACC,GAAD,MAAY,CACtCC,KAAK,aACHC,QAAS,OACTC,eAAgB,UACfH,EAAMI,YAAYC,GAAG,MAAQ,CAC5BC,OAAQ,OACRC,UAAW,IAGfC,KAAK,aACHC,WAAY,mDACZC,aAAc,SACdC,UAAW,wCACVX,EAAMI,YAAYQ,KAAK,MAAQ,CAC9BV,QAAS,OACTW,WAAY,SACZN,UAAW,MACXO,MAAO,cA0BEC,EArBF,WACX,IAAMC,EAAUlB,IAChB,OACE,yBAAKmB,UAAWD,EAAQf,MACtB,kBAAC,IAAD,CACEgB,UAAWD,EAAQR,KACnBU,QAAS,CAAEC,IAAK,IAChBC,MAAO,CAAEC,OAAQ,IAAKP,MAAO,MAE7B,yBAAKG,UAAU,kBACb,yBACEK,IAAKC,IACLH,MAAO,CAAEI,WAAY,OACrBC,IAAI,4B,gLC1BVC,EAAY3B,aAAW,SAACC,GAAD,MAAY,CACvC2B,KAAM,CACJC,SAAU,GAEZC,MAAO,CACL3B,QAAS,SAEX4B,eAAe,aACb5B,QAAS,QACRF,EAAMI,YAAYC,GAAG,MAAQ,CAC5BH,QAAS,SAGb6B,cAAc,aACZ7B,QAAS,QACRF,EAAMI,YAAYC,GAAG,MAAQ,CAC5BH,QAAS,aAKA,SAAS8B,IACtB,IAAMhB,EAAUU,IADsB,EAEcO,IAAMC,SAAS,MAF7B,mBAE/BC,EAF+B,KAEXC,EAFW,KAIhCC,EAAmBC,QAAQH,GAU3BI,EACJ,kBAACC,EAAA,EAAD,CACEC,SAAUN,EACVO,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,aAAW,EACXC,gBAAiB,CAAEH,SAAU,MAAOC,WAAY,SAChDG,KAAMV,EACNW,QAf0B,WAC5BZ,EAAsB,QAgBpB,kBAACa,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,aAAW,iBACXC,gBAAc,OACdC,MAAM,WAEN,kBAAC,IAAD,OAEF,2BACGC,IAASC,OAAOC,YACbF,IAASC,OAAOC,YAAYC,YAC5B,UAGR,kBAACR,EAAA,EAAD,CACES,QAAS,WACPJ,IAASC,OAAOI,YAGlB,kBAACT,EAAA,EAAD,CAAYC,aAAW,UAAUE,MAAM,WACrC,kBAAC,IAAD,OAEF,yCAKN,OACE,yBAAKpC,UAAWD,EAAQW,MACtB,kBAACiC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY9C,UAAWD,EAAQa,MAAOmC,QAAQ,KAAKC,QAAM,GAAzD,sBAGA,yBAAKhD,UAAWD,EAAQW,OACxB,yBAAKV,UAAWD,EAAQc,gBACtB,kBAACoB,EAAA,EAAD,CACEgB,KAAK,MACLf,aAAW,iBACXC,gBAAc,OACdC,MAAM,WAEN,kBAAC,IAAD,MACA,yBAAKpC,UAAU,MACZqC,IAASC,OAAOC,YACbF,IAASC,OAAOC,YAAYC,YAC5B,UAGR,kBAACP,EAAA,EAAD,CACEgB,KAAK,MACLf,aAAW,WACXC,gBAAc,OACdM,QAAS,WACPJ,IAASC,OAAOI,UAChBQ,QAAQC,IAAI,YAEdf,MAAM,WAEN,kBAAC,IAAD,MACA,yBAAKpC,UAAU,MAAf,cAGJ,yBAAKA,UAAWD,EAAQe,eACtB,kBAACmB,EAAA,EAAD,CACEC,aAAW,YACXC,gBAAc,OACdM,QAhFiB,SAACW,GAC5BjC,EAAsBiC,EAAMC,gBAgFlBjB,MAAM,WAEN,kBAAC,IAAD,UAKPd,G,uCC5HQgC,EATF,CACXC,SAAU,WACVC,SAAU,WACVC,SAAU,WACVC,SAAU,WACVC,YAAa,cACbC,UAAW,aCIPnD,EAAY3B,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CAEJK,OAAQ,GACRI,aAAc,GACdoE,UAAW,KAEbjD,MAAO,CACLkD,SAAU,IAEZC,UAAW,CACT1E,OAAQ,GAEV2E,IAAK,CACH3E,OAAQ,UAEV4E,MAAO,CACLhF,QAAS,OACTC,eAAgB,SAChBU,WAAY,YAEdsE,OAAQ,OAGK,SAASC,EAAT,GAAkD,IAA1BZ,EAAyB,EAAzBA,SAAUa,EAAe,EAAfA,YACzCrE,EAAUU,IAD8C,EAGpCO,IAAMC,SAAS,IAHqB,mBAGvDL,EAHuD,KAGhDyD,EAHgD,OAItCrD,IAAMC,SAAS,IAJuB,mBAIvDqD,EAJuD,KAIjDC,EAJiD,OAK1BvD,IAAMC,SAAS,IALW,mBAKvDuD,EALuD,KAK3CC,EAL2C,OAM5BzD,IAAMC,SAAS,IANa,mBAMvDyD,EANuD,KAM5CC,EAN4C,OAQ1B3D,IAAMC,SAAS,IARW,mBAQvD2D,EARuD,KAQ3CC,EAR2C,OAS5B7D,IAAMC,SAAS,IATa,mBASvD6D,EATuD,KAS5CC,EAT4C,OAUhB/D,IAAMC,SAAS,IAVC,mBAUvD+D,EAVuD,KAUtCC,EAVsC,OAWlBjE,IAAMC,SAAS,IAXG,mBAWvDiE,EAXuD,KAWvCC,EAXuC,KAyBxDC,EAAmB,WACcP,EAApCjE,EAAkD,GAA5B,YACYmE,EAAlCT,EAA+C,GAA3B,YAC0BW,EAA9CT,EAAiE,GAAjC,YACYW,EAA5CT,EAA8D,GAAhC,aAa3BW,EAAY,WAChB,IAAIC,EAAI,YAAO/B,GACf,GAAI3C,GAAS0D,GAAQE,GAAcE,EACjC,GAAIA,GAAaF,EAAY,CAC3B,GAAIc,EAAM,CACR,IAA8C,IAA1CA,EAAKC,WAAU,SAACC,GAAD,OAAOA,EAAE,KAAOlB,KAKjC,OAFAc,SACAL,EAAa,0BAHbO,EAAKG,KAAK,CAAC7E,EAAO0D,EAAME,EAAYE,SAMjCY,EAAO,CAAC,CAAC1E,EAAO0D,EAAME,EAAYE,IACzCN,EAAYkB,EAAMhC,EAAKC,UAvB3Bc,EAAS,IACTE,EAAQ,IACRE,EAAc,IACdE,EAAa,IAEbE,EAAc,IACdE,EAAa,IACbE,EAAmB,IACnBE,EAAkB,SAkBdA,EAAkB,wCAGpBC,KAGJ,OACE,kBAACM,EAAA,EAAD,CAAM1F,UAAWD,EAAQf,MACvB,2CACA,6BACE,kBAAC2G,EAAA,EAAD,CACE3F,UAAY4E,EAAiC,GAApB7E,EAAQgE,UACjC6B,SAzDY,SAACxC,GACnBiB,EAASjB,EAAMyC,OAAOC,QAyDhBA,MAAOlF,EACPmF,UAAQ,EACRC,GAAG,eACHC,MAAM,QACNlD,QAAQ,WACRmD,QAAStB,EACTuB,WAAYvB,KAGhB,6BACE,kBAACe,EAAA,EAAD,CACEI,UAAQ,EACR/F,UAAY8E,EAAgC,GAApB/E,EAAQgE,UAChC+B,MAAOxB,EACPsB,SArEW,SAACxC,GAClBmB,EAAQnB,EAAMyC,OAAOC,QAqEfE,GAAG,cACHC,MAAM,cACNlD,QAAQ,WACRmD,QAASpB,EACTqB,WAAYrB,KAGhB,yBAAK9E,UAAWD,EAAQkE,OACtB,kBAAC0B,EAAA,EAAD,CACES,KAAK,SACLpG,UAAYkF,EAA+B,GAAdnF,EAAQiE,IACrCgC,GAAG,eACHC,MAAM,eACNI,QAAM,EACNN,UAAQ,EACRG,QAAShB,EACTiB,WAAYjB,EACZU,SAjFe,SAACxC,GACtBuB,EAAavB,EAAMyC,OAAOC,QAiFpBA,MAAOpB,EACP4B,gBAAiB,CACfC,QAAQ,GAEVxD,QAAQ,YAEP,CAAC,EAAG,EAAG,GAAGyD,KAAI,SAACC,GAAD,OACb,kBAACzE,EAAA,EAAD,CAAU0E,IAAKD,EAAQX,MAAOW,GAC3BA,OAIP,kBAACd,EAAA,EAAD,CACES,KAAK,SACLpG,UAAYgF,EAAgC,GAAdjF,EAAQiE,IACtCgC,GAAG,gBACHC,MAAM,gBACNI,QAAM,EACNN,UAAQ,EACRG,QAASlB,EACTmB,WAAYnB,EACZY,SA1GiB,SAACxC,GACxBqB,EAAcrB,EAAMyC,OAAOC,QA0GrBA,MAAOtB,EACPmC,UAAW,SAACnB,GACQ,KAAdA,EAAEoB,SAAgBvB,KAExBiB,gBAAiB,CACfC,QAAQ,GAEVxD,QAAQ,YAEP,CAAC,EAAG,EAAG,GAAGyD,KAAI,SAACC,GAAD,OACb,kBAACzE,EAAA,EAAD,CAAU0E,IAAKD,EAAQX,MAAOW,GAC3BA,QAKT,kBAACI,EAAA,EAAD,CACE7G,UAAWD,EAAQmE,OACnBnB,QAAQ,YACRX,MAAM,UACN0E,KAAK,SACLrE,QAAS4C,GALX,kBC3KN,IAAM5E,EAAY3B,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CAEJS,aAAc,GACdJ,OAAQ,GACRwE,UAAW,IACX5E,QAAS,QAEX2B,MAAO,CACLkD,SAAU,IAEZC,UAAW,CACT1E,OAAQ,GAGV6E,OAAQ,OAIK,SAAS6C,EAAT,GAAkD,IAA1BvD,EAAyB,EAAzBA,SAAUwD,EAAe,EAAfA,YACzCjH,EAAUU,IAD8C,EAGpCO,IAAMC,SAAS,IAHqB,mBAGvDL,EAHuD,KAGhDyD,EAHgD,OAItCrD,IAAMC,SAAS,IAJuB,mBAIvDqD,EAJuD,KAIjDC,EAJiD,OAM1BvD,IAAMC,SAAS,IANW,mBAMvD2D,EANuD,KAM3CC,EAN2C,OAO5B7D,IAAMC,SAAS,IAPa,mBAOvD6D,EAPuD,KAO5CC,EAP4C,KAgBxDK,EAAmB,WACcP,EAApCjE,EAAkD,GAA5B,YACYmE,EAAlCT,EAA+C,GAA3B,aAUjBe,EAAY,WAChB,IAAIC,EAAI,YAAO9B,GACf,GAAI5C,GAAS0D,EAAM,CACjB,GAAIgB,EAAM,CACR,IAA8C,IAA1CA,EAAKC,WAAU,SAACC,GAAD,OAAOA,EAAE,KAAOlB,KAKjC,OAFAc,SACAL,EAAa,0BAHbO,EAAKG,KAAK,CAAC7E,EAAO0D,SAMfgB,EAAO,CAAC,CAAC1E,EAAO0D,IAEvB0C,EAAY1B,EAAMhC,EAAKE,UAnBzBa,EAAS,IACTE,EAAQ,IAERM,EAAc,IACdE,EAAa,SAkBXK,KAGJ,OACE,kBAACM,EAAA,EAAD,CAAM1F,UAAWD,EAAQf,MACvB,2CACA,6BACE,kBAAC2G,EAAA,EAAD,CACE3F,UAAWD,EAAQgE,UACnBgC,UAAQ,EACRC,GAAG,cACHC,MAAM,cACNlD,QAAQ,WACR+C,MAAOlF,EACPgF,SAjDY,SAACxC,GACnBiB,EAASjB,EAAMyC,OAAOC,QAiDhBI,QAAStB,EACTuB,WAAYvB,KAGhB,6BACE,kBAACe,EAAA,EAAD,CACEI,UAAQ,EACR/F,UAAWD,EAAQgE,UACnBiC,GAAG,aACHC,MAAM,aACNlD,QAAQ,WACRmD,QAASpB,EACTqB,WAAYrB,EACZgB,MAAOxB,EACPsB,SA7DW,SAACxC,GAClBmB,EAAQnB,EAAMyC,OAAOC,QA6Dfa,UAAW,SAACnB,GACQ,KAAdA,EAAEoB,SAAgBvB,QAI5B,6BACE,kBAACwB,EAAA,EAAD,CACE7G,UAAWD,EAAQmE,OACnBnB,QAAQ,YACRX,MAAM,UACN0E,KAAK,SACLrE,QAAS4C,GALX,mBCnGR,IAAM5E,EAAY3B,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CAEJS,aAAc,GACdJ,OAAQ,GACRwE,UAAW,IACX5E,QAAS,QAEX8E,UAAW,CACT1E,OAAQ,GAEV6E,OAAQ,OAGK,SAAS+C,GAAT,GAAkD,IAA1BxD,EAAyB,EAAzBA,SAAUyD,EAAe,EAAfA,YACzCnH,EAAUU,IAD8C,EAGtCO,IAAMC,SAAS,IAHuB,mBAGvDkG,EAHuD,KAGjDC,EAHiD,OAItCpG,IAAMC,SAAS,IAJuB,mBAIvDqD,EAJuD,KAIjDC,EAJiD,OAM5BvD,IAAMC,SAAS,IANa,mBAMvDoG,EANuD,KAM5CC,EAN4C,OAO5BtG,IAAMC,SAAS,IAPa,mBAOvD6D,EAPuD,KAO5CC,EAP4C,KAgBxDK,EAAmB,WACYkC,EAAlCH,EAA+C,GAA3B,YACcpC,EAAlCT,EAA+C,GAA3B,aAUjBe,EAAY,WAChB,IAAIC,EAAI,YAAO7B,GACf,GAAI0D,GAAQ7C,EAAM,CAChB,GAAIgB,EAAM,CACR,IAA8C,IAA1CA,EAAKC,WAAU,SAACC,GAAD,OAAOA,EAAE,KAAOlB,KAKjC,OAFAc,SACAL,EAAa,0BAHbO,EAAKG,KAAK,CAAC0B,EAAM7C,SAMdgB,EAAO,CAAC,CAAC6B,EAAM7C,IAEtB4C,EAAY5B,EAAMhC,EAAKG,UAnBzB2D,EAAQ,IACR7C,EAAQ,IAER+C,EAAa,IACbvC,EAAa,SAkBXK,KAIJ,OACE,kBAACM,EAAA,EAAD,CAAM1F,UAAWD,EAAQf,MACvB,2CACA,6BACE,kBAAC2G,EAAA,EAAD,CACE3F,UAAWD,EAAQgE,UACnBgC,UAAQ,EACRC,GAAG,eACHC,MAAM,eACNlD,QAAQ,WACR+C,MAAOqB,EACPvB,SAlDW,SAACxC,GAClBgE,EAAQhE,EAAMyC,OAAOC,QAkDfI,QAASmB,EACTlB,WAAYkB,KAGhB,6BACE,kBAAC1B,EAAA,EAAD,CACEI,UAAQ,EACR/F,UAAWD,EAAQgE,UACnBiC,GAAG,eACHC,MAAM,eACNlD,QAAQ,WACRmD,QAASpB,EACTqB,WAAYrB,EACZgB,MAAOxB,EACPsB,SA9DW,SAACxC,GAClBmB,EAAQnB,EAAMyC,OAAOC,QA8Dfa,UAAW,SAACnB,GACQ,KAAdA,EAAEoB,SAAgBvB,QAI5B,6BACE,kBAACwB,EAAA,EAAD,CACE7G,UAAWD,EAAQmE,OACnBnB,QAAQ,YACRX,MAAM,UACN0E,KAAK,SACLrE,QAAS4C,GALX,mB,uJC/ER,SAASkC,GAAWJ,EAAM7C,EAAMkD,GAC9B,MAAO,CAAEL,OAAM7C,OAAMkD,cAGvB,SAASC,GAAqBC,EAAGC,EAAGC,GAClC,OAAID,EAAEC,GAAWF,EAAEE,IACT,EAEND,EAAEC,GAAWF,EAAEE,GACV,EAEF,EAmBT,IAAMC,GAAY,CAChB,CACE7B,GAAI,OACJ8B,SAAS,EACTC,gBAAgB,EAChB9B,MAAO,SAET,CAAED,GAAI,OAAQ8B,SAAS,EAAMC,gBAAgB,EAAO9B,MAAO,QAC3D,CACED,GAAI,aACJ8B,SAAS,EACTC,gBAAgB,EAChB9B,MAAO,gBAIX,SAAS+B,GAAkBC,GAAQ,IAE/BlI,EAOEkI,EAPFlI,QACAmI,EAMED,EANFC,iBACAC,EAKEF,EALFE,MACAP,EAIEK,EAJFL,QACAQ,EAGEH,EAHFG,YACAC,EAEEJ,EAFFI,SACAC,EACEL,EADFK,cAMF,OACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,QAAQ,YACjB,kBAACC,GAAA,EAAD,CACEC,cAAeR,EAAc,GAAKA,EAAcC,EAChDQ,QAASR,EAAW,GAAKD,IAAgBC,EACzCzC,SAAUsC,EACVY,WAAY,CAAE,aAAc,0BAG/BjB,GAAUrB,KAAI,SAACuC,GAAD,OACb,kBAACN,GAAA,EAAD,CACE/B,IAAKqC,EAAS/C,GACdgD,MAAOD,EAASjB,QAAU,QAAU,OACpCY,QAASK,EAAShB,eAAiB,OAAS,UAC5CkB,cAAerB,IAAYmB,EAAS/C,IAAKmC,GAEzC,kBAACe,GAAA,EAAD,CACEC,OAAQvB,IAAYmB,EAAS/C,GAC7BoD,UAAWxB,IAAYmB,EAAS/C,GAAKmC,EAAQ,MAC7C1F,SAzBe4G,EAyBYN,EAAS/C,GAzBR,SAAC5C,GACvCkF,EAAclF,EAAOiG,MA0BVN,EAAS9C,MACT2B,IAAYmB,EAAS/C,GACpB,0BAAMhG,UAAWD,EAAQuJ,gBACZ,SAAVnB,EAAmB,oBAAsB,oBAE1C,OAhCU,IAACkB,OAmD7B,IAAME,GAAmBzK,aAAW,SAACC,GAAD,MAAY,CAC9CC,KAAM,CACJwK,YAAazK,EAAM0K,QAAQ,GAC3BC,aAAc3K,EAAM0K,QAAQ,IAE9BE,UACyB,UAAvB5K,EAAM6K,QAAQxD,KACV,CACEhE,MAAOrD,EAAM6K,QAAQC,UAAUC,KAC/BC,gBAAiBC,aAAQjL,EAAM6K,QAAQC,UAAUI,MAAO,MAE1D,CACE7H,MAAOrD,EAAM6K,QAAQM,KAAKC,QAC1BJ,gBAAiBhL,EAAM6K,QAAQC,UAAUO,MAEjDxJ,MAAO,CACLyJ,KAAM,gBAIJC,GAAuB,SAACrC,GAC5B,IAAMlI,EAAUwJ,KACRnB,EAA8DH,EAA9DG,YAAamC,EAAiDtC,EAAjDsC,SAAUC,EAAuCvC,EAAvCuC,YAAajH,EAA0B0E,EAA1B1E,SAAUa,EAAgB6D,EAAhB7D,YActD,OACE,kBAACvB,EAAA,EAAD,CACE7C,UAAWyK,aAAK1K,EAAQf,KAAT,eACZe,EAAQ4J,UAAYvB,EAAc,KAGpCA,EAAc,EACb,kBAACtF,EAAA,EAAD,CACE9C,UAAWD,EAAQa,MACnBwB,MAAM,UACNW,QAAQ,YACR2H,UAAU,OAETtC,EANH,aASA,kBAACtF,EAAA,EAAD,CACE9C,UAAWD,EAAQa,MACnBmC,QAAQ,KACRiD,GAAG,aACH0E,UAAU,OAJZ,iBAUDtC,EAAc,EACb,kBAACuC,GAAA,EAAD,CAAS/J,MAAM,UACb,kBAACqB,EAAA,EAAD,CAAYQ,QAxCF,WAChB,IAAI6C,EAAI,YAAO/B,GAEfgH,EAASK,SAAQ,SAACC,GAChB,IAAIhF,EAASP,EAAKC,WAAU,SAACC,GAAD,OAAOA,EAAE,KAAOqF,KAC5CvF,EAAKwF,OAAOjF,EAAQ,MAGtBzB,EAAYkB,EAAMhC,EAAKC,UACvBiH,EAAY,KA+B0BtI,aAAW,UACzC,kBAAC,KAAD,QAIJ,gCAcFzB,GAAY3B,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CAEJK,OAAQ,IAEV0L,MAAO,CACLtL,aAAc,GACdI,MAAO,OACPmL,aAAcjM,EAAM0K,QAAQ,IAE9BwB,MAAO,GAGP3B,eAAgB,CACd4B,OAAQ,EACRC,KAAM,gBACN/K,OAAQ,EACRf,QAAS,EACT+L,SAAU,SACV1C,QAAS,EACT9F,SAAU,WACVyI,IAAK,GACLxL,MAAO,OAMI,SAASyL,GAAT,GAAkD,IAA1B/H,EAAyB,EAAzBA,SAAUa,EAAe,EAAfA,YACzCmH,EAAOhI,EACTA,EAASiD,KAAI,SAACgF,GAAD,OAAajE,GAAWiE,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,OACrEjE,GAAW,GAAI,GAAI,IAEjBxH,EAAUU,KAL8C,EAMpCO,IAAMC,SAAS,OANqB,mBAMvDkH,EANuD,KAMhDsD,EANgD,OAOhCzK,IAAMC,SAAS,QAPiB,mBAOvD2G,EAPuD,KAO9C8D,EAP8C,OAQ9B1K,IAAMC,SAAS,IARe,mBAQvDsJ,EARuD,KAQ7CC,EAR6C,OAStCxJ,IAAMC,SAAS,GATuB,mBASvD0K,EATuD,KASjDC,EATiD,OAUxB5K,IAAMC,SAAS,GAVS,mBAUvD4K,EAVuD,KAU1CC,EAV0C,KA0DxDC,EACJF,EAAcG,KAAKC,IAAIJ,EAAaN,EAAKW,OAASP,EAAOE,GAE3D,OACE,yBAAK7L,UAAWD,EAAQf,MACtB,kBAACmN,GAAA,EAAD,CAAOnM,UAAWD,EAAQgL,OACxB,kBAAC,GAAD,CACE3C,YAAamC,EAAS2B,OACtB3B,SAAUA,EACVC,YAAaA,EACbjH,SAAUA,EACVa,YAAaA,IAEf,kBAACgI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACErM,UAAWD,EAAQkL,MACnBqB,kBAAgB,UAChBxF,KAAK,QACL5E,aAAW,kBAEX,kBAAC8F,GAAD,CACEjI,QAASA,EACTqI,YAAamC,EAAS2B,OACtB/D,MAAOA,EACPP,QAASA,EACTM,iBAjEiB,SAAC9E,GAC5B,GAAIA,EAAMyC,OAAOgD,QAAjB,CACE,IAAM0D,EAAehB,EAAK/E,KAAI,SAACgG,GAAD,OAAOA,EAAElI,QACvCkG,EAAY+B,QAGd/B,EAAY,KA4DFlC,cAxEc,SAAClF,EAAOiG,GAEhCoC,EADc7D,IAAYyB,GAAsB,QAAVlB,EACrB,OAAS,OAC1BuD,EAAWrC,IAsEDhB,SAAUkD,EAAKW,SAEjB,kBAACO,GAAA,EAAD,KA7RZ,SAAoBC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMlG,KAAI,SAACqG,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAMrD,OALAF,EAAeG,MAAK,SAACrF,EAAGC,GACtB,IAAMQ,EAAQwE,EAAWjF,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVQ,EAAoBA,EACjBT,EAAE,GAAKC,EAAE,MAEXiF,EAAepG,KAAI,SAACqG,GAAD,OAAQA,EAAG,MAuRxBG,CAAWzB,EApS1B,SAAuBpD,EAAOP,GAC5B,MAAiB,SAAVO,EACH,SAACT,EAAGC,GAAJ,OAAUF,GAAqBC,EAAGC,EAAGC,IACrC,SAACF,EAAGC,GAAJ,OAAWF,GAAqBC,EAAGC,EAAGC,IAiSZqF,CAAc9E,EAAOP,IACpCsF,MAAMvB,EAAOE,EAAaF,EAAOE,EAAcA,GAC/CrF,KAAI,SAAC2G,EAAKL,GACT,IAnCI3F,EAmCEiG,GAnCFjG,EAmC8BgG,EAAI7I,MAnCG,IAA5BiG,EAAS8C,QAAQlG,IAoCxBmG,EAAO,kCAA8BR,GAE3C,OACE,kBAACtE,GAAA,EAAD,CACE+E,OAAK,EACL9K,QAAS,SAACW,GAAD,OAtET,SAACA,EAAOkB,GAC1B,IAAMkJ,EAAgBjD,EAAS8C,QAAQ/I,GACnCmJ,EAAc,IAEK,IAAnBD,EACFC,EAAcA,EAAYC,OAAOnD,EAAUjG,GAChB,IAAlBkJ,EACTC,EAAcA,EAAYC,OAAOnD,EAAS2C,MAAM,IACvCM,IAAkBjD,EAAS2B,OAAS,EAC7CuB,EAAcA,EAAYC,OAAOnD,EAAS2C,MAAM,GAAI,IAC3CM,EAAgB,IACzBC,EAAcA,EAAYC,OACxBnD,EAAS2C,MAAM,EAAGM,GAClBjD,EAAS2C,MAAMM,EAAgB,KAInChD,EAAYiD,GAqD0BE,CAAYvK,EAAO+J,EAAI7I,OAC3CsJ,KAAK,WACLC,eAAcT,EACdU,UAAW,EACXpH,IAAKyG,EAAI7I,KAAO6I,EAAI7I,KAAO,UAC3BiG,SAAU6C,GAEV,kBAAC3E,GAAA,EAAD,CAAWC,QAAQ,YACjB,kBAACC,GAAA,EAAD,CACEE,QAASuE,EACTtE,WAAY,CAAE,kBAAmBwE,MAGrC,kBAAC7E,GAAA,EAAD,CAAWO,MAAM,OAAON,QAAQ,QAC7ByE,EAAIhG,MAEP,kBAACsB,GAAA,EAAD,CACEiC,UAAU,KACV1E,GAAIsH,EACJtE,MAAM,QACN+E,MAAM,OAELZ,EAAI7I,MAEP,kBAACmE,GAAA,EAAD,CAAWO,MAAM,SAASmE,EAAI3F,gBAIrCuE,EAAY,GACX,kBAACvD,GAAA,EAAD,CAAUrI,MAAO,CAAEC,OAAQ,GAAK2L,IAC9B,kBAACtD,GAAA,EAAD,CAAWuF,QAAS,QAM9B,kBAACC,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BxD,UAAU,MACVyD,MAAO5C,EAAKW,OACZL,YAAaA,EACbF,KAAMA,EACNyC,aA5FiB,SAAChL,EAAOiL,GAC/BzC,EAAQyC,IA4FFC,oBAzFwB,SAAClL,GAC/B0I,EAAeyC,SAASnL,EAAMyC,OAAOC,MAAO,KAC5C8F,EAAQ,QC/QZ,SAASrE,GAAWJ,EAAM7C,GACxB,MAAO,CAAE6C,OAAM7C,QAGjB,SAASmD,GAAqBC,EAAGC,EAAGC,GAClC,OAAID,EAAEC,GAAWF,EAAEE,IACT,EAEND,EAAEC,GAAWF,EAAEE,GACV,EAEF,EAmBT,IAAMC,GAAY,CAChB,CACE7B,GAAI,OACJ8B,SAAS,EACTC,gBAAgB,EAChB9B,MAAO,SAET,CAAED,GAAI,OAAQ8B,SAAS,EAAMC,gBAAgB,EAAO9B,MAAO,SAG7D,SAAS+B,GAAkBC,GAAQ,IAE/BlI,EAOEkI,EAPFlI,QACAmI,EAMED,EANFC,iBACAC,EAKEF,EALFE,MACAP,EAIEK,EAJFL,QACAQ,EAGEH,EAHFG,YACAC,EAEEJ,EAFFI,SACAC,EACEL,EADFK,cAMF,OACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,QAAQ,YACjB,kBAACC,GAAA,EAAD,CACEC,cAAeR,EAAc,GAAKA,EAAcC,EAChDQ,QAASR,EAAW,GAAKD,IAAgBC,EACzCzC,SAAUsC,EACVY,WAAY,CAAE,aAAc,0BAG/BjB,GAAUrB,KAAI,SAACuC,GAAD,OACb,kBAACN,GAAA,EAAD,CACE/B,IAAKqC,EAAS/C,GACdgD,MAAOD,EAASjB,QAAU,QAAU,OACpCY,QAASK,EAAShB,eAAiB,OAAS,UAC5CkB,cAAerB,IAAYmB,EAAS/C,IAAKmC,GAEzC,kBAACe,GAAA,EAAD,CACEC,OAAQvB,IAAYmB,EAAS/C,GAC7BoD,UAAWxB,IAAYmB,EAAS/C,GAAKmC,EAAQ,MAC7C1F,SAzBe4G,EAyBYN,EAAS/C,GAzBR,SAAC5C,GACvCkF,EAAclF,EAAOiG,MA0BVN,EAAS9C,MACT2B,IAAYmB,EAAS/C,GACpB,0BAAMhG,UAAWD,EAAQuJ,gBACZ,SAAVnB,EAAmB,oBAAsB,oBAE1C,OAhCU,IAACkB,OAmD7B,IAAME,GAAmBzK,aAAW,SAACC,GAAD,MAAY,CAC9CC,KAAM,CACJwK,YAAazK,EAAM0K,QAAQ,GAC3BC,aAAc3K,EAAM0K,QAAQ,IAE9BE,UACyB,UAAvB5K,EAAM6K,QAAQxD,KACV,CACEhE,MAAOrD,EAAM6K,QAAQC,UAAUC,KAC/BC,gBAAiBC,aAAQjL,EAAM6K,QAAQC,UAAUI,MAAO,MAE1D,CACE7H,MAAOrD,EAAM6K,QAAQM,KAAKC,QAC1BJ,gBAAiBhL,EAAM6K,QAAQC,UAAUO,MAEjDxJ,MAAO,CACLyJ,KAAM,gBAIJC,GAAuB,SAACrC,GAC5B,IAAMlI,EAAUwJ,KACRnB,EAA8DH,EAA9DG,YAAamC,EAAiDtC,EAAjDsC,SAAUC,EAAuCvC,EAAvCuC,YAAahH,EAA0ByE,EAA1BzE,SAAUwD,EAAgBiB,EAAhBjB,YAatD,OACE,kBAACnE,EAAA,EAAD,CACE7C,UAAWyK,aAAK1K,EAAQf,KAAT,eACZe,EAAQ4J,UAAYvB,EAAc,KAGpCA,EAAc,EACb,kBAACtF,EAAA,EAAD,CACE9C,UAAWD,EAAQa,MACnBwB,MAAM,UACNW,QAAQ,YACR2H,UAAU,OAETtC,EANH,aASA,kBAACtF,EAAA,EAAD,CACE9C,UAAWD,EAAQa,MACnBmC,QAAQ,KACRiD,GAAG,aACH0E,UAAU,OAJZ,iBAUDtC,EAAc,EACb,kBAACuC,GAAA,EAAD,CAAS/J,MAAM,UACb,kBAACqB,EAAA,EAAD,CAAYQ,QAvCF,WAChB,IAAI6C,EAAI,YAAO9B,GAEf+G,EAASK,SAAQ,SAACC,GAChB,IAAIhF,EAASP,EAAKC,WAAU,SAACC,GAAD,OAAOA,EAAE,KAAOqF,KAC5CvF,EAAKwF,OAAOjF,EAAQ,MAEtBmB,EAAY1B,EAAMhC,EAAKE,UACvBgH,EAAY,KA+B0BtI,aAAW,UACzC,kBAAC,KAAD,QAIJ,gCAcFzB,GAAY3B,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CAEJK,OAAQ,IAEV0L,MAAO,CACLtL,aAAc,GACdI,MAAO,OACPmL,aAAcjM,EAAM0K,QAAQ,IAE9BwB,MAAO,GAGP3B,eAAgB,CACd4B,OAAQ,EACRC,KAAM,gBACN/K,OAAQ,EACRf,QAAS,EACT+L,SAAU,SACV1C,QAAS,EACT9F,SAAU,WACVyI,IAAK,GACLxL,MAAO,OAKI,SAAS2O,GAAT,GAAkD,IAA1BhL,EAAyB,EAAzBA,SAAUwD,EAAe,EAAfA,YACzCuE,EAAO/H,EACTA,EAASgD,KAAI,SAACiI,GAAD,OAAalH,GAAWkH,EAAQ,GAAIA,EAAQ,OACzD,CAAClH,GAAW,GAAI,KAEdxH,EAAUU,KAL8C,EAMpCO,IAAMC,SAAS,OANqB,mBAMvDkH,EANuD,KAMhDsD,EANgD,OAOhCzK,IAAMC,SAAS,QAPiB,mBAOvD2G,EAPuD,KAO9C8D,EAP8C,OAQ9B1K,IAAMC,SAAS,IARe,mBAQvDsJ,EARuD,KAQ7CC,EAR6C,OAStCxJ,IAAMC,SAAS,GATuB,mBASvD0K,EATuD,KASjDC,EATiD,OAUxB5K,IAAMC,SAAS,GAVS,mBAUvD4K,EAVuD,KAU1CC,EAV0C,KA0DxDC,EACJF,EAAcG,KAAKC,IAAIJ,EAAaN,EAAKW,OAASP,EAAOE,GAE3D,OACE,yBAAK7L,UAAWD,EAAQf,MACtB,kBAACmN,GAAA,EAAD,CAAOnM,UAAWD,EAAQgL,OACxB,kBAAC,GAAD,CACE3C,YAAamC,EAAS2B,OACtB3B,SAAUA,EACVC,YAAaA,EACbhH,SAAUA,EACVwD,YAAaA,IAEf,kBAACoF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACErM,UAAWD,EAAQkL,MACnBqB,kBAAgB,UAChBxF,KAAK,QACL5E,aAAW,kBAEX,kBAAC,GAAD,CACEnC,QAASA,EACTqI,YAAamC,EAAS2B,OACtB/D,MAAOA,EACPP,QAASA,EACTM,iBAjEiB,SAAC9E,GAC5B,GAAIA,EAAMyC,OAAOgD,QAAjB,CACE,IAAM0D,EAAehB,EAAK/E,KAAI,SAACgG,GAAD,OAAOA,EAAElI,QACvCkG,EAAY+B,QAGd/B,EAAY,KA4DFlC,cAxEc,SAAClF,EAAOiG,GAEhCoC,EADc7D,IAAYyB,GAAsB,QAAVlB,EACrB,OAAS,OAC1BuD,EAAWrC,IAsEDhB,SAAUkD,EAAKW,SAEjB,kBAACO,GAAA,EAAD,KArRZ,SAAoBC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMlG,KAAI,SAACqG,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAMrD,OALAF,EAAeG,MAAK,SAACrF,EAAGC,GACtB,IAAMQ,EAAQwE,EAAWjF,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVQ,EAAoBA,EACjBT,EAAE,GAAKC,EAAE,MAEXiF,EAAepG,KAAI,SAACqG,GAAD,OAAQA,EAAG,MA+QxBG,CAAWzB,EA5R1B,SAAuBpD,EAAOP,GAC5B,MAAiB,SAAVO,EACH,SAACT,EAAGC,GAAJ,OAAUF,GAAqBC,EAAGC,EAAGC,IACrC,SAACF,EAAGC,GAAJ,OAAWF,GAAqBC,EAAGC,EAAGC,IAyRZqF,CAAc9E,EAAOP,IACpCsF,MAAMvB,EAAOE,EAAaF,EAAOE,EAAcA,GAC/CrF,KAAI,SAAC2G,EAAKL,GACT,IAnCI3F,EAmCEiG,GAnCFjG,EAmC8BgG,EAAI7I,MAnCG,IAA5BiG,EAAS8C,QAAQlG,IAoCxBmG,EAAO,kCAA8BR,GAE3C,OACE,kBAACtE,GAAA,EAAD,CACE+E,OAAK,EACL9K,QAAS,SAACW,GAAD,OAtET,SAACA,EAAOkB,GAC1B,IAAMkJ,EAAgBjD,EAAS8C,QAAQ/I,GACnCmJ,EAAc,IAEK,IAAnBD,EACFC,EAAcA,EAAYC,OAAOnD,EAAUjG,GAChB,IAAlBkJ,EACTC,EAAcA,EAAYC,OAAOnD,EAAS2C,MAAM,IACvCM,IAAkBjD,EAAS2B,OAAS,EAC7CuB,EAAcA,EAAYC,OAAOnD,EAAS2C,MAAM,GAAI,IAC3CM,EAAgB,IACzBC,EAAcA,EAAYC,OACxBnD,EAAS2C,MAAM,EAAGM,GAClBjD,EAAS2C,MAAMM,EAAgB,KAInChD,EAAYiD,GAqD0BE,CAAYvK,EAAO+J,EAAI7I,OAC3CsJ,KAAK,WACLC,eAAcT,EACdU,UAAW,EACXpH,IAAKyG,EAAI7I,KAAO6I,EAAI7I,KAAO,UAC3BiG,SAAU6C,GAEV,kBAAC3E,GAAA,EAAD,CAAWC,QAAQ,YACjB,kBAACC,GAAA,EAAD,CACEE,QAASuE,EACTtE,WAAY,CAAE,kBAAmBwE,MAGrC,kBAAC7E,GAAA,EAAD,CAAWO,MAAM,OAAON,QAAQ,QAC7ByE,EAAIhG,MAEP,kBAACsB,GAAA,EAAD,CACEiC,UAAU,KACV1E,GAAIsH,EACJtE,MAAM,QACN+E,MAAM,OAELZ,EAAI7I,UAKdyH,EAAY,GACX,kBAACvD,GAAA,EAAD,CAAUrI,MAAO,CAAEC,OAAQ,GAAK2L,IAC9B,kBAACtD,GAAA,EAAD,CAAWuF,QAAS,QAM9B,kBAACC,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BxD,UAAU,MACVyD,MAAO5C,EAAKW,OACZL,YAAaA,EACbF,KAAMA,EACNyC,aA3FiB,SAAChL,EAAOiL,GAC/BzC,EAAQyC,IA2FFC,oBAxFwB,SAAClL,GAC/B0I,EAAeyC,SAASnL,EAAMyC,OAAOC,MAAO,KAC5C8F,EAAQ,QCvQZ,SAASrE,GAAWJ,EAAM7C,GACxB,MAAO,CAAE6C,OAAM7C,QAGjB,SAASmD,GAAqBC,EAAGC,EAAGC,GAClC,OAAID,EAAEC,GAAWF,EAAEE,IACT,EAEND,EAAEC,GAAWF,EAAEE,GACV,EAEF,EAmBT,IAAMC,GAAY,CAChB,CACE7B,GAAI,OACJ8B,SAAS,EACTC,gBAAgB,EAChB9B,MAAO,QAET,CAAED,GAAI,OAAQ8B,SAAS,EAAMC,gBAAgB,EAAO9B,MAAO,SAG7D,SAAS+B,GAAkBC,GAAQ,IAE/BlI,EAOEkI,EAPFlI,QACAmI,EAMED,EANFC,iBACAC,EAKEF,EALFE,MACAP,EAIEK,EAJFL,QACAQ,EAGEH,EAHFG,YACAC,EAEEJ,EAFFI,SACAC,EACEL,EADFK,cAMF,OACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,QAAQ,YACjB,kBAACC,GAAA,EAAD,CACEC,cAAeR,EAAc,GAAKA,EAAcC,EAChDQ,QAASR,EAAW,GAAKD,IAAgBC,EACzCzC,SAAUsC,EACVY,WAAY,CAAE,aAAc,0BAG/BjB,GAAUrB,KAAI,SAACuC,GAAD,OACb,kBAACN,GAAA,EAAD,CACE/B,IAAKqC,EAAS/C,GACdgD,MAAOD,EAASjB,QAAU,QAAU,OACpCY,QAASK,EAAShB,eAAiB,OAAS,UAC5CkB,cAAerB,IAAYmB,EAAS/C,IAAKmC,GAEzC,kBAACe,GAAA,EAAD,CACEC,OAAQvB,IAAYmB,EAAS/C,GAC7BoD,UAAWxB,IAAYmB,EAAS/C,GAAKmC,EAAQ,MAC7C1F,SAzBe4G,EAyBYN,EAAS/C,GAzBR,SAAC5C,GACvCkF,EAAclF,EAAOiG,MA0BVN,EAAS9C,MACT2B,IAAYmB,EAAS/C,GACpB,0BAAMhG,UAAWD,EAAQuJ,gBACZ,SAAVnB,EAAmB,oBAAsB,oBAE1C,OAhCU,IAACkB,OAmD7B,IAAME,GAAmBzK,aAAW,SAACC,GAAD,MAAY,CAC9CC,KAAM,CACJwK,YAAazK,EAAM0K,QAAQ,GAC3BC,aAAc3K,EAAM0K,QAAQ,IAE9BE,UACyB,UAAvB5K,EAAM6K,QAAQxD,KACV,CACEhE,MAAOrD,EAAM6K,QAAQC,UAAUC,KAC/BC,gBAAiBC,aAAQjL,EAAM6K,QAAQC,UAAUI,MAAO,MAE1D,CACE7H,MAAOrD,EAAM6K,QAAQM,KAAKC,QAC1BJ,gBAAiBhL,EAAM6K,QAAQC,UAAUO,MAEjDxJ,MAAO,CACLyJ,KAAM,gBAIJC,GAAuB,SAACrC,GAC5B,IAAMlI,EAAUwJ,KACRnB,EAA8DH,EAA9DG,YAAamC,EAAiDtC,EAAjDsC,SAAUC,EAAuCvC,EAAvCuC,YAAa/G,EAA0BwE,EAA1BxE,SAAUyD,EAAgBe,EAAhBf,YAYtD,OACE,kBAACrE,EAAA,EAAD,CACE7C,UAAWyK,aAAK1K,EAAQf,KAAT,eACZe,EAAQ4J,UAAYvB,EAAc,KAGpCA,EAAc,EACb,kBAACtF,EAAA,EAAD,CACE9C,UAAWD,EAAQa,MACnBwB,MAAM,UACNW,QAAQ,YACR2H,UAAU,OAETtC,EANH,aASA,kBAACtF,EAAA,EAAD,CACE9C,UAAWD,EAAQa,MACnBmC,QAAQ,KACRiD,GAAG,aACH0E,UAAU,OAJZ,iBAUDtC,EAAc,EACb,kBAACuC,GAAA,EAAD,CAAS/J,MAAM,UACb,kBAACqB,EAAA,EAAD,CAAYQ,QAtCF,WAChB,IAAI6C,EAAI,YAAO7B,GAEf8G,EAASK,SAAQ,SAACC,GAChB,IAAIhF,EAASP,EAAKC,WAAU,SAACC,GAAD,OAAOA,EAAE,KAAOqF,KAC5CvF,EAAKwF,OAAOjF,EAAQ,MAEtBqB,EAAY5B,EAAMhC,EAAKG,UACvB+G,EAAY,KA8B0BtI,aAAW,UACzC,kBAAC,KAAD,QAIJ,gCAcFzB,GAAY3B,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CAEJK,OAAQ,IAEV0L,MAAO,CACLtL,aAAc,GACdI,MAAO,OACPmL,aAAcjM,EAAM0K,QAAQ,IAE9BwB,MAAO,GAGP3B,eAAgB,CACd4B,OAAQ,EACRC,KAAM,gBACN/K,OAAQ,EACRf,QAAS,EACT+L,SAAU,SACV1C,QAAS,EACT9F,SAAU,WACVyI,IAAK,GACLxL,MAAO,OAII,SAAS6O,GAAT,GAAkD,IAA1BjL,EAAyB,EAAzBA,SAAUyD,EAAe,EAAfA,YACzCqE,EAAO9H,EACTA,EAAS+C,KAAI,SAACmI,GAAD,OAAapH,GAAWoH,EAAQ,GAAIA,EAAQ,OACzD,CAACpH,GAAW,GAAI,KAEdxH,EAAUU,KAL8C,EAMpCO,IAAMC,SAAS,OANqB,mBAMvDkH,EANuD,KAMhDsD,EANgD,OAOhCzK,IAAMC,SAAS,QAPiB,mBAOvD2G,EAPuD,KAO9C8D,EAP8C,OAQ9B1K,IAAMC,SAAS,IARe,mBAQvDsJ,EARuD,KAQ7CC,EAR6C,OAStCxJ,IAAMC,SAAS,GATuB,mBASvD0K,EATuD,KASjDC,EATiD,OAUxB5K,IAAMC,SAAS,GAVS,mBAUvD4K,EAVuD,KAU1CC,EAV0C,KA0DxDC,EACJF,EAAcG,KAAKC,IAAIJ,EAAaN,EAAKW,OAASP,EAAOE,GAE3D,OACE,yBAAK7L,UAAWD,EAAQf,MACtB,kBAACmN,GAAA,EAAD,CAAOnM,UAAWD,EAAQgL,OACxB,kBAAC,GAAD,CACE3C,YAAamC,EAAS2B,OACtB3B,SAAUA,EACVC,YAAaA,EACb/G,SAAUA,EACVyD,YAAaA,IAEf,kBAACkF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACErM,UAAWD,EAAQkL,MACnBqB,kBAAgB,UAChBxF,KAAK,QACL5E,aAAW,kBAEX,kBAAC,GAAD,CACEnC,QAASA,EACTqI,YAAamC,EAAS2B,OACtB/D,MAAOA,EACPP,QAASA,EACTM,iBAjEiB,SAAC9E,GAC5B,GAAIA,EAAMyC,OAAOgD,QAAjB,CACE,IAAM0D,EAAehB,EAAK/E,KAAI,SAACgG,GAAD,OAAOA,EAAElI,QACvCkG,EAAY+B,QAGd/B,EAAY,KA4DFlC,cAxEc,SAAClF,EAAOiG,GAEhCoC,EADc7D,IAAYyB,GAAsB,QAAVlB,EACrB,OAAS,OAC1BuD,EAAWrC,IAsEDhB,SAAUkD,EAAKW,SAEjB,kBAACO,GAAA,EAAD,KAnRZ,SAAoBC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMlG,KAAI,SAACqG,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAMrD,OALAF,EAAeG,MAAK,SAACrF,EAAGC,GACtB,IAAMQ,EAAQwE,EAAWjF,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVQ,EAAoBA,EACjBT,EAAE,GAAKC,EAAE,MAEXiF,EAAepG,KAAI,SAACqG,GAAD,OAAQA,EAAG,MA6QxBG,CAAWzB,EA1R1B,SAAuBpD,EAAOP,GAC5B,MAAiB,SAAVO,EACH,SAACT,EAAGC,GAAJ,OAAUF,GAAqBC,EAAGC,EAAGC,IACrC,SAACF,EAAGC,GAAJ,OAAWF,GAAqBC,EAAGC,EAAGC,IAuRZqF,CAAc9E,EAAOP,IACpCsF,MAAMvB,EAAOE,EAAaF,EAAOE,EAAcA,GAC/CrF,KAAI,SAAC2G,EAAKL,GACT,IAnCI3F,EAmCEiG,GAnCFjG,EAmC8BgG,EAAI7I,MAnCG,IAA5BiG,EAAS8C,QAAQlG,IAoCxBmG,EAAO,kCAA8BR,GAE3C,OACE,kBAACtE,GAAA,EAAD,CACE+E,OAAK,EACL9K,QAAS,SAACW,GAAD,OAtET,SAACA,EAAOkB,GAC1B,IAAMkJ,EAAgBjD,EAAS8C,QAAQ/I,GACnCmJ,EAAc,IAEK,IAAnBD,EACFC,EAAcA,EAAYC,OAAOnD,EAAUjG,GAChB,IAAlBkJ,EACTC,EAAcA,EAAYC,OAAOnD,EAAS2C,MAAM,IACvCM,IAAkBjD,EAAS2B,OAAS,EAC7CuB,EAAcA,EAAYC,OAAOnD,EAAS2C,MAAM,GAAI,IAC3CM,EAAgB,IACzBC,EAAcA,EAAYC,OACxBnD,EAAS2C,MAAM,EAAGM,GAClBjD,EAAS2C,MAAMM,EAAgB,KAInChD,EAAYiD,GAqD0BE,CAAYvK,EAAO+J,EAAI7I,OAC3CsJ,KAAK,WACLC,eAAcT,EACdU,UAAW,EACXpH,IAAKyG,EAAI7I,KAAO6I,EAAI7I,KAAO,UAC3BiG,SAAU6C,GAEV,kBAAC3E,GAAA,EAAD,CAAWC,QAAQ,YACjB,kBAACC,GAAA,EAAD,CACEE,QAASuE,EACTtE,WAAY,CAAE,kBAAmBwE,MAGrC,kBAAC7E,GAAA,EAAD,CAAWO,MAAM,OAAON,QAAQ,QAC7ByE,EAAIhG,MAEP,kBAACsB,GAAA,EAAD,CACEiC,UAAU,KACV1E,GAAIsH,EACJtE,MAAM,QACN+E,MAAM,OAELZ,EAAI7I,UAKdyH,EAAY,GACX,kBAACvD,GAAA,EAAD,CAAUrI,MAAO,CAAEC,OAAQ,GAAK2L,IAC9B,kBAACtD,GAAA,EAAD,CAAWuF,QAAS,QAM9B,kBAACC,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BxD,UAAU,MACVyD,MAAO5C,EAAKW,OACZL,YAAaA,EACbF,KAAMA,EACNyC,aA3FiB,SAAChL,EAAOiL,GAC/BzC,EAAQyC,IA2FFC,oBAxFwB,SAAClL,GAC/B0I,EAAeyC,SAASnL,EAAMyC,OAAOC,MAAO,KAC5C8F,EAAQ,Q,cC/QNnL,GAAY3B,aAAW,SAACC,GAAD,YAAY,CACvCC,KAAM,CACJ4P,SAAU,IACVvP,OAAQ,GACRI,aAAc,IAEhBoP,SAAO,mBACJ9P,EAAMI,YAAYQ,KAAK,MAAQ,CAC9B+I,QAAS,WAFN,cAIJ3J,EAAMI,YAAYC,GAAG,MAAQ,CAC5BH,QAAS,OACTC,eAAgB,iBANb,GASP6E,UAAW,CACT1E,OAAQ,EACRuP,SAAU,KAEZ1K,OAAO,eACJnF,EAAMI,YAAYC,GAAG,MAAQ,CAC5B0P,WAAY,WAKZC,GAAqB,CAAC,CAAC,KAAM,CAAC,QAAS,KAAM,CAAC,YAAa,QAAS,MAC3D,SAASC,GAAT,GAMX,IA4EqBtC,EAAO7B,EAASiC,EAjFvCpJ,EAKC,EALDA,SACAuL,EAIC,EAJDA,YACA1L,EAGC,EAHDA,SACAC,EAEC,EAFDA,SACAC,EACC,EADDA,SAEM1D,EAAUU,KADf,EAE6BQ,mBAAS,IAFtC,mBAEMuK,EAFN,KAEe0D,EAFf,OAG6BjO,mBAAS,IAHtC,mBAGMwN,EAHN,KAGeU,EAHf,OAI6BlO,mBAAS,IAJtC,mBAIM0N,EAJN,KAIeS,EAJf,OAKmCnO,mBAAS,IAL5C,mBAKMoO,EALN,KAKkBC,EALlB,OAOuCrO,mBAAS,IAPhD,mBAOMsO,EAPN,KAOoBC,EAPpB,OAQuCvO,mBAAS,IARhD,mBAQMwO,EARN,KAQoBC,EARpB,OASuCzO,mBAAS,IAThD,mBASM0O,EATN,KASoBC,EATpB,OAU6C3O,mBAAS,IAVtD,mBAUM4O,EAVN,KAUuBC,EAVvB,KA6BK1K,EAAmB,WACkBoK,EAAxChE,EAAwD,GAA9B,YACcoE,EAAxCjB,EAAwD,GAA9B,YACce,EAAxCjB,EAAwD,GAA9B,YACoBqB,EAA9CT,EAAiE,GAAjC,aAe7BhK,EAAY,WAChB,GAAImG,GAAWmD,GAAWF,GAAWY,EAAY,CAC/C,IAAI/J,EAAI,YAAO5B,GAEf,GAAIA,EAAU,CACZ,IAKS,IAJP4B,EAAKC,WACH,SAACC,GAAD,OACEA,EAAE,KAAOmJ,EAAUF,GAClBjJ,EAAE,KAAOiJ,GAAWjJ,EAAE,KAAOgG,KASlC,OAJApG,IACAwK,EAAgB,0BAChBJ,EAAgB,+BAChBE,EAAgB,0BALhBpK,EAAKG,KAAK,CAACkJ,EAASF,EAASjD,EAAS6D,EAAYV,EAAUF,SAS9DnJ,EAAO,CAAC,CAACqJ,EAASF,EAASjD,EAAS6D,EAAYV,EAAUF,IAE5DQ,EAAY3J,EAAMhC,EAAKI,UAlCzB4L,EAAc,IACdJ,EAAW,IACXE,EAAW,IACXD,EAAW,IAEXK,EAAgB,IAChBI,EAAgB,IAChBF,EAAgB,IAChBI,EAAmB,SA4BZ1K,KAMH2K,GAHwBlF,EAGeW,EAHNsB,EAGe,GAH/BJ,EAGYnJ,GAF3BmJ,EAAMnH,WAAU,SAACC,GAAD,OAAOA,EAAEsH,KAAWjC,OAI5C,OACE,kBAACnF,EAAA,EAAD,CAAM1F,UAAWD,EAAQf,MACvB,kBAACgR,GAAA,EAAD,CAAahQ,UAAWD,EAAQ8O,SAC9B,wBAAI1O,MAAO,CAAE8P,UAAW,SAAxB,gBACA,6BACE,kBAACtK,EAAA,EAAD,CACES,KAAK,SACLpG,UAAWD,EAAQgE,UACnBiC,GAAG,UACHC,MAAM,UACNI,QAAM,EACNN,UAAQ,EACRG,QAASyJ,EACTxJ,WAAYwJ,EACZ/J,SA1EY,SAACxC,GACrBgM,EAAWhM,EAAMyC,OAAOC,QA0EhBA,MAAO6I,EACPrI,gBAAiB,CACfC,QAAQ,GAEVxD,QAAQ,YAEPU,EAAS+C,KAAI,SAACC,GAAD,OACZ,kBAACzE,EAAA,EAAD,CACE0E,IAAKD,EAAO,GAAKA,EAAO,GAAK,UAC7BX,MAAOW,EAAO,IAEbA,EAAO,SAMhB,6BACE,kBAACd,EAAA,EAAD,CACES,KAAK,SACLpG,UAAWD,EAAQgE,UACnBiC,GAAG,UACHC,MAAM,UACNI,QAAM,EACNN,UAAQ,EACRG,QAASuJ,EACTtJ,WAAYsJ,EACZ7J,SA1GY,SAACxC,GACrB+L,EAAW/L,EAAMyC,OAAOC,QA0GhBA,MAAO2I,EACPnI,gBAAiB,CACfC,QAAQ,GAEVxD,QAAQ,YAEPS,EAASgD,KAAI,SAACC,GAAD,OACZ,kBAACzE,EAAA,EAAD,CACE0E,IAAKD,EAAO,GAAKA,EAAO,GAAK,UAC7BX,MAAOW,EAAO,IAEbA,EAAO,SAMhB,6BACE,kBAACd,EAAA,EAAD,CACES,KAAK,SACLpG,UAAWD,EAAQgE,UACnBiC,GAAG,UACHC,MAAM,UACNI,QAAM,EACNN,UAAQ,EACRG,QAASqJ,EACTpJ,WAAYoJ,EACZ3J,SA3IY,SAACxC,GACrBkM,EAAc,IACdJ,EAAW9L,EAAMyC,OAAOC,QA0IhBA,MAAO0F,EACPlF,gBAAiB,CACfC,QAAQ,GAEVxD,QAAQ,YAEPQ,EAASiD,KAAI,SAACC,GAAD,OACZ,kBAACzE,EAAA,EAAD,CACE0E,IAAKD,EAAO,GAAKA,EAAO,GAAK,UAC7BX,MAAOW,EAAO,IAEbA,EAAO,SAMhB,6BACE,kBAACd,EAAA,EAAD,CACES,KAAK,SACLpG,UAAWD,EAAQgE,UACnBiC,GAAG,UACHC,MAAM,sBACNI,QAAM,EACNN,UAAQ,EACRG,QAAS2J,EACT1J,WAAY0J,EACZjK,SA1Ja,SAACxC,GACtBkM,EAAclM,EAAMyC,OAAOC,QA0JnBA,MAAOuJ,EACPa,UAAW1E,EACX7E,UAAW,SAACnB,GACQ,KAAdA,EAAEoB,SAAgBvB,KAExBiB,gBAAiB,CACfC,QAAQ,GAEVxD,QAAQ,YAEPyI,GAAWuE,EACVhB,GAAmBgB,EAAa,GAAK,GAAGvJ,KAAI,SAACC,GAAD,OAC1C,kBAACzE,EAAA,EAAD,CAAU0E,IAAKD,GAAkB,UAAWX,MAAOW,GAChDA,MAIL,kBAACzE,EAAA,EAAD,QAKN,kBAAC6E,EAAA,EAAD,CACE7G,UAAWD,EAAQmE,OACnBnB,QAAQ,YACRX,MAAM,UACN0E,KAAK,SACLrE,QAAS4C,GALX,mBCjOR,SAASkC,GAAWoH,EAASF,EAASjD,EAAS2E,EAAaC,GAC1D,MAAO,CAAEzB,UAASF,UAASjD,UAAS2E,cAAaC,aAGnD,SAAS3I,GAAqBC,EAAGC,EAAGC,GAClC,OAAID,EAAEC,GAAWF,EAAEE,IACT,EAEND,EAAEC,GAAWF,EAAEE,GACV,EAEF,EAmBT,IAAMC,GAAY,CAChB,CACE7B,GAAI,UACJ8B,SAAS,EACTC,gBAAgB,EAChB9B,MAAO,WAET,CAAED,GAAI,UAAW8B,SAAS,EAAMC,gBAAgB,EAAO9B,MAAO,WAC9D,CACED,GAAI,UACJ8B,SAAS,EACTC,gBAAgB,EAChB9B,MAAO,YAUX,SAAS+B,GAAkBC,GAAQ,IAE/BlI,EAOEkI,EAPFlI,QACAmI,EAMED,EANFC,iBACAC,EAKEF,EALFE,MACAP,EAIEK,EAJFL,QACAQ,EAGEH,EAHFG,YACAC,EAEEJ,EAFFI,SACAC,EACEL,EADFK,cAMF,OACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,QAAQ,YACjB,kBAACC,GAAA,EAAD,CACEC,cAAeR,EAAc,GAAKA,EAAcC,EAChDQ,QAASR,EAAW,GAAKD,IAAgBC,EACzCzC,SAAUsC,EACVY,WAAY,CAAE,aAAc,0BAG/BjB,GAAUrB,KAAI,SAACuC,GAAD,OACb,kBAACN,GAAA,EAAD,CACE/B,IAAKqC,EAAS/C,GACdgD,MACGD,EAASjB,QAEU,YAAhBiB,EAAS/C,GACT,SACA,QAHA,OAKN0C,QAASK,EAAShB,eAAiB,OAAS,UAC5CkB,cAAerB,IAAYmB,EAAS/C,IAAKmC,GAEzC,kBAACe,GAAA,EAAD,CACEC,OAAQvB,IAAYmB,EAAS/C,GAC7BoD,UAAWxB,IAAYmB,EAAS/C,GAAKmC,EAAQ,MAC7C1F,SA/Be4G,EA+BYN,EAAS/C,GA/BR,SAAC5C,GACvCkF,EAAclF,EAAOiG,MAgCVN,EAAS9C,MACT2B,IAAYmB,EAAS/C,GACpB,0BAAMhG,UAAWD,EAAQuJ,gBACZ,SAAVnB,EAAmB,oBAAsB,oBAE1C,OAtCU,IAACkB,OAyD7B,IAAME,GAAmBzK,aAAW,SAACC,GAAD,MAAY,CAC9CC,KAAM,CACJwK,YAAazK,EAAM0K,QAAQ,GAC3BC,aAAc3K,EAAM0K,QAAQ,IAE9BE,UACyB,UAAvB5K,EAAM6K,QAAQxD,KACV,CACEhE,MAAOrD,EAAM6K,QAAQC,UAAUC,KAC/BC,gBAAiBC,aAAQjL,EAAM6K,QAAQC,UAAUI,MAAO,MAE1D,CACE7H,MAAOrD,EAAM6K,QAAQM,KAAKC,QAC1BJ,gBAAiBhL,EAAM6K,QAAQC,UAAUO,MAEjDxJ,MAAO,CACLyJ,KAAM,gBAIJC,GAAuB,SAACrC,GAC5B,IAAMlI,EAAUwJ,KACRnB,EAA8DH,EAA9DG,YAAamC,EAAiDtC,EAAjDsC,SAAUC,EAAuCvC,EAAvCuC,YAAa9G,EAA0BuE,EAA1BvE,SAAUuL,EAAgBhH,EAAhBgH,YActD,OACE,kBAACpM,EAAA,EAAD,CACE7C,UAAWyK,aAAK1K,EAAQf,KAAT,eACZe,EAAQ4J,UAAYvB,EAAc,KAGpCA,EAAc,EACb,kBAACtF,EAAA,EAAD,CACE9C,UAAWD,EAAQa,MACnBwB,MAAM,UACNW,QAAQ,YACR2H,UAAU,OAETtC,EANH,aASA,kBAACtF,EAAA,EAAD,CACE9C,UAAWD,EAAQa,MACnBmC,QAAQ,KACRiD,GAAG,aACH0E,UAAU,OAJZ,iBAUDtC,EAAc,EACb,kBAACuC,GAAA,EAAD,CAAS/J,MAAM,UACb,kBAACqB,EAAA,EAAD,CAAYQ,QAxCF,WAChB,IAAI6C,EAAI,YAAO5B,GAEf6G,EAASK,SAAQ,SAACC,GAChB,IAAIhF,EAASP,EAAKC,WAAU,SAACC,GAAD,OAAOA,EAAE,KAAOqF,KAC5CvF,EAAKwF,OAAOjF,EAAQ,MAGtBoJ,EAAY3J,EAAMhC,EAAKI,UACvB8G,EAAY,KA+B0BtI,aAAW,UACzC,kBAAC,KAAD,QAIJ,gCAcFzB,GAAY3B,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CAEJK,OAAQ,IAEV0L,MAAO,CACLtL,aAAc,GACdI,MAAO,OACPmL,aAAcjM,EAAM0K,QAAQ,IAE9BwB,MAAO,GAGP3B,eAAgB,CACd4B,OAAQ,EACRC,KAAM,gBACN/K,OAAQ,EACRf,QAAS,EACT+L,SAAU,SACV1C,QAAS,EACT9F,SAAU,WACVyI,IAAK,GACLxL,MAAO,OAKI,SAASwQ,GAAT,GAAkD,IAA1B3M,EAAyB,EAAzBA,SAAUuL,EAAe,EAAfA,YACzC1D,EAAO7H,EACTA,EAAS8C,KAAI,SAAC8J,GAAD,OACX/I,GAAW+I,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,OAErE,CAAC/I,GAAW,GAAI,GAAI,GAAI,GAAI,KAE1BxH,EAAUU,KAP8C,EAQpCO,IAAMC,SAAS,OARqB,mBAQvDkH,EARuD,KAQhDsD,EARgD,OAShCzK,IAAMC,SAAS,aATiB,mBASvD2G,EATuD,KAS9C8D,EAT8C,OAU9B1K,IAAMC,SAAS,IAVe,mBAUvDsJ,EAVuD,KAU7CC,EAV6C,OAWtCxJ,IAAMC,SAAS,GAXuB,mBAWvD0K,EAXuD,KAWjDC,EAXiD,OAYxB5K,IAAMC,SAAS,GAZS,mBAYvD4K,EAZuD,KAY1CC,EAZ0C,KA4DxDC,EACJF,EAAcG,KAAKC,IAAIJ,EAAaN,EAAKW,OAASP,EAAOE,GAE3D,OACE,yBAAK7L,UAAWD,EAAQf,MACtB,kBAACmN,GAAA,EAAD,CAAOnM,UAAWD,EAAQgL,OACxB,kBAAC,GAAD,CACE3C,YAAamC,EAAS2B,OACtB3B,SAAUA,EACVC,YAAaA,EACb9G,SAAUA,EACVuL,YAAaA,IAEf,kBAAC7C,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACErM,UAAWD,EAAQkL,MACnBqB,kBAAgB,UAChBxF,KAAK,QACL5E,aAAW,kBAEX,kBAAC,GAAD,CACEnC,QAASA,EACTqI,YAAamC,EAAS2B,OACtB/D,MAAOA,EACPP,QAASA,EACTM,iBAjEiB,SAAC9E,GAC5B,GAAIA,EAAMyC,OAAOgD,QAAjB,CACE,IAAM0D,EAAehB,EAAK/E,KAAI,SAACgG,GAAD,OAAOA,EAAE4D,aACvC5F,EAAY+B,QAGd/B,EAAY,KA4DFlC,cAxEc,SAAClF,EAAOiG,GAEhCoC,EADc7D,IAAYyB,GAAsB,QAAVlB,EACrB,OAAS,OAC1BuD,EAAWrC,IAsEDhB,SAAUkD,EAAKW,SAEjB,kBAACO,GAAA,EAAD,KA1SZ,SAAoBC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMlG,KAAI,SAACqG,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAMrD,OALAF,EAAeG,MAAK,SAACrF,EAAGC,GACtB,IAAMQ,EAAQwE,EAAWjF,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVQ,EAAoBA,EACjBT,EAAE,GAAKC,EAAE,MAEXiF,EAAepG,KAAI,SAACqG,GAAD,OAAQA,EAAG,MAoSxBG,CAAWzB,EAjT1B,SAAuBpD,EAAOP,GAC5B,MAAiB,SAAVO,EACH,SAACT,EAAGC,GAAJ,OAAUF,GAAqBC,EAAGC,EAAGC,IACrC,SAACF,EAAGC,GAAJ,OAAWF,GAAqBC,EAAGC,EAAGC,IA8SZqF,CAAc9E,EAAOP,IACpCsF,MAAMvB,EAAOE,EAAaF,EAAOE,EAAcA,GAC/CrF,KAAI,SAAC2G,EAAKL,GACT,IAnCIjC,EAmCEuC,GAnCFvC,EAmC8BsC,EAAIiD,WAnCS,IAA/B7F,EAAS8C,QAAQxC,IAoC3ByC,EAAO,kCAA8BR,GAE3C,OACE,kBAACtE,GAAA,EAAD,CACE+E,OAAK,EACL9K,QAAS,SAACW,GAAD,OAtET,SAACA,EAAOgN,GAC1B,IAAM5C,EAAgBjD,EAAS8C,QAAQ+C,GACnC3C,EAAc,IAEK,IAAnBD,EACFC,EAAcA,EAAYC,OAAOnD,EAAU6F,GAChB,IAAlB5C,EACTC,EAAcA,EAAYC,OAAOnD,EAAS2C,MAAM,IACvCM,IAAkBjD,EAAS2B,OAAS,EAC7CuB,EAAcA,EAAYC,OAAOnD,EAAS2C,MAAM,GAAI,IAC3CM,EAAgB,IACzBC,EAAcA,EAAYC,OACxBnD,EAAS2C,MAAM,EAAGM,GAClBjD,EAAS2C,MAAMM,EAAgB,KAInChD,EAAYiD,GAqD0BE,CAAYvK,EAAO+J,EAAIiD,YAC3CxC,KAAK,WACLC,eAAcT,EACdU,UAAW,EACXpH,IAAKyG,EAAIiD,UAAYjD,EAAIiD,UAAY,eACrC7F,SAAU6C,GAEV,kBAAC3E,GAAA,EAAD,CAAWC,QAAQ,YACjB,kBAACC,GAAA,EAAD,CACEE,QAASuE,EACTtE,WAAY,CAAE,kBAAmBwE,MAGrC,kBAAC7E,GAAA,EAAD,CAAWO,MAAM,OAAON,QAAQ,QAC7ByE,EAAIwB,SAEP,kBAAClG,GAAA,EAAD,CACEiC,UAAU,KACV1E,GAAIsH,EACJtE,MAAM,SACN+E,MAAM,OAELZ,EAAIsB,SAEP,kBAAChG,GAAA,EAAD,CAAWO,MAAM,SAASmE,EAAI3B,aAKrCO,EAAY,GACX,kBAACvD,GAAA,EAAD,CAAUrI,MAAO,CAAEC,OAAQ,GAAK2L,IAC9B,kBAACtD,GAAA,EAAD,CAAWuF,QAAS,QAM9B,kBAACC,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BxD,UAAU,MACVyD,MAAO5C,EAAKW,OACZL,YAAaA,EACbF,KAAMA,EACNyC,aA7FiB,SAAChL,EAAOiL,GAC/BzC,EAAQyC,IA6FFC,oBA1FwB,SAAClL,GAC/B0I,EAAeyC,SAASnL,EAAMyC,OAAOC,MAAO,KAC5C8F,EAAQ,QCtSZ,IAAMnL,GAAY3B,aAAW,SAACC,GAAD,YAAY,CACvCC,KAAM,CACJ4P,SAAU,IACVvP,OAAQ,GACRI,aAAc,IAEhBoP,SAAO,mBACJ9P,EAAMI,YAAYQ,KAAK,MAAQ,CAC9B+I,QAAS,WAFN,cAIJ3J,EAAMI,YAAYC,GAAG,MAAQ,CAC5BH,QAAS,OACTC,eAAgB,WANb,GASP6E,UAAU,aACR1E,OAAQ,EACRuP,SAAU,KACT7P,EAAMI,YAAYC,GAAG,MAAQ,CAC5BwP,SAAU,MAGd1K,OAAO,eACJnF,EAAMI,YAAYC,GAAG,MAAQ,CAC5B0P,WAAY,WAKH,SAASyB,GAAT,GAIX,IAHF5M,EAGC,EAHDA,YACA6M,EAEC,EAFDA,eACAhN,EACC,EADDA,SAEMzD,EAAUU,KADf,EAGqBQ,mBAAS,IAH9B,mBAGMwP,EAHN,KAGWC,EAHX,OAI2BzP,mBAAS,IAJpC,mBAIM0P,EAJN,KAIcC,EAJd,OAO+B3P,mBAAS,IAPxC,mBAOM4P,EAPN,KAOgBC,EAPhB,OAQqC7P,mBAAS,IAR9C,mBAQM8P,EARN,KAQmBC,EARnB,KAkCK3L,EAAY,WAChB,GAAIoL,GAAOE,EAAQ,CACjB,IAAIrL,EAAI,eAAQ3B,GAChB2B,EAAKmL,GAAOE,EAEZH,EAAelL,EAAMhC,EAAKK,aAZ5B+M,EAAO,IACPE,EAAU,IAEVE,EAAY,IACZE,EAAe,SATkBF,EAAhCL,EAA4C,GAA1B,YACoBO,EAAtCL,EAAqD,GAA7B,aAsB3B,OACE,kBAACjL,EAAA,EAAD,CAAM1F,UAAWD,EAAQf,MACvB,kBAACgR,GAAA,EAAD,CAAahQ,UAAWD,EAAQ8O,SAC9B,wBAAI1O,MAAO,CAAE8P,UAAW,SAAxB,0BAEA,6BACE,kBAACtK,EAAA,EAAD,CACES,KAAK,SACLpG,UAAWD,EAAQgE,UACnBiC,GAAG,MACHC,MAAM,MACNI,QAAM,EACNN,UAAQ,EACRG,QAAS2K,EACT1K,WAAY0K,EACZjL,SAlDQ,SAACxC,GACjBsN,EAAOtN,EAAMyC,OAAOC,QAkDZA,MAAO2K,EACPnK,gBAAiB,CACfC,QAAQ,GAEVxD,QAAQ,YAEPkO,OAAOC,QAAQvN,GACbwN,QAAO,SAAC3L,GAAD,OAAgB,IAATA,EAAE,MAChBgB,KAAI,SAACC,GAAD,OACH,kBAACzE,EAAA,EAAD,CAAU0E,IAAKD,EAAO,GAAIX,MAAOW,EAAO,IACrCA,EAAO,SAMlB,6BACE,kBAACd,EAAA,EAAD,CACES,KAAK,SACLpG,UAAWD,EAAQgE,UACnBiC,GAAG,UACHC,MAAM,cACNI,QAAM,EACNN,UAAQ,EACRG,QAAS6K,EACT5K,WAAY4K,EACZnL,SAzEW,SAACxC,GACpBwN,EAAUxN,EAAMyC,OAAOC,QAyEfA,MAAO6K,EACPhK,UAAW,SAACnB,GACQ,KAAdA,EAAEoB,SAAgBvB,KAExBiB,gBAAiB,CACfC,QAAQ,GAEVxD,QAAQ,YAEP,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGyD,KAAI,SAACC,GAAD,OACzB,kBAACzE,EAAA,EAAD,CAAU0E,IAAKD,EAAQX,MAAOW,GAC3BA,QAKT,6BACE,kBAACd,EAAA,EAAD,CACES,KAAK,SACLpG,UAAWD,EAAQgE,UACnBiC,GAAG,OACHC,MAAM,QACNI,QAAM,EACNN,UAAQ,EAERD,MAAOtC,EAAS0I,OAChBvF,UAAW,SAACnB,GACQ,KAAdA,EAAEoB,SAAgBvB,KAExBiB,gBAAiB,CACfC,QAAQ,GAEVxD,QAAQ,YAGN,kBAACf,EAAA,EAAD,CAAU0E,IAAK,QAASZ,MAAOtC,EAAS0I,QACrC1I,EAAS0I,UAKlB,kBAACrF,EAAA,EAAD,CACE7G,UAAWD,EAAQmE,OACnBnB,QAAQ,YACRX,MAAM,UACN0E,KAAK,SACLrE,QAAS4C,GALX,UCpJR,SAASoC,GAAqBC,EAAGC,EAAGC,GAClC,OAAID,EAAEC,GAAWF,EAAEE,IACT,EAEND,EAAEC,GAAWF,EAAEE,GACV,EAEF,EAmBT,IAAMC,GAAY,CAChB,CACE7B,GAAI,MACJ8B,SAAS,EACTC,gBAAgB,EAChB9B,MAAO,OAET,CACED,GAAI,eACJ8B,SAAS,EACTC,gBAAgB,EAChB9B,MAAO,aAIX,SAAS+B,GAAkBC,GAAQ,IAE/BlI,EAOEkI,EAPFlI,QACAmI,EAMED,EANFC,iBACAC,EAKEF,EALFE,MACAP,EAIEK,EAJFL,QACAQ,EAGEH,EAHFG,YACAC,EAEEJ,EAFFI,SACAC,EACEL,EADFK,cAMF,OACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,QAAQ,YACjB,kBAACC,GAAA,EAAD,CACEC,cAAeR,EAAc,GAAKA,EAAcC,EAChDQ,QAASR,EAAW,GAAKD,IAAgBC,EACzCzC,SAAUsC,EACVY,WAAY,CAAE,aAAc,0BAG/BjB,GAAUrB,KAAI,SAACuC,GAAD,OACb,kBAACN,GAAA,EAAD,CACE/B,IAAKqC,EAAS/C,GACdgD,MAAOD,EAASjB,QAAU,SAAW,OACrCY,QAASK,EAAShB,eAAiB,OAAS,UAC5CkB,cAAerB,IAAYmB,EAAS/C,IAAKmC,GAEzC,kBAACe,GAAA,EAAD,CACEC,OAAQvB,IAAYmB,EAAS/C,GAC7BoD,UAAWxB,IAAYmB,EAAS/C,GAAKmC,EAAQ,MAC7C1F,SAzBe4G,EAyBYN,EAAS/C,GAzBR,SAAC5C,GACvCkF,EAAclF,EAAOiG,MA0BVN,EAAS9C,MACT2B,IAAYmB,EAAS/C,GACpB,0BAAMhG,UAAWD,EAAQuJ,gBACZ,SAAVnB,EAAmB,oBAAsB,oBAE1C,OAhCU,IAACkB,OAmD7B,IAAME,GAAmBzK,aAAW,SAACC,GAAD,MAAY,CAC9CC,KAAM,CACJwK,YAAazK,EAAM0K,QAAQ,GAC3BC,aAAc3K,EAAM0K,QAAQ,IAE9BE,UACyB,UAAvB5K,EAAM6K,QAAQxD,KACV,CACEhE,MAAOrD,EAAM6K,QAAQC,UAAUC,KAC/BC,gBAAiBC,aAAQjL,EAAM6K,QAAQC,UAAUI,MAAO,MAE1D,CACE7H,MAAOrD,EAAM6K,QAAQM,KAAKC,QAC1BJ,gBAAiBhL,EAAM6K,QAAQC,UAAUO,MAEjDxJ,MAAO,CACLyJ,KAAM,gBAIJC,GAAuB,SAACrC,GAC5B,IAAMlI,EAAUwJ,KAEdnB,EAKEH,EALFG,YACAmC,EAIEtC,EAJFsC,SACAC,EAGEvC,EAHFuC,YACA7G,EAEEsE,EAFFtE,YACA6M,EACEvI,EADFuI,eAaF,OACE,kBAAC3N,EAAA,EAAD,CACE7C,UAAWyK,aAAK1K,EAAQf,KAAT,eACZe,EAAQ4J,UAAYvB,EAAc,KAGpCA,EAAc,EACb,kBAACtF,EAAA,EAAD,CACE9C,UAAWD,EAAQa,MACnBwB,MAAM,UACNW,QAAQ,YACR2H,UAAU,OAETtC,EANH,aASA,kBAACtF,EAAA,EAAD,CACE9C,UAAWD,EAAQa,MACnBmC,QAAQ,KACRiD,GAAG,aACH0E,UAAU,OAJZ,gBAUDtC,EAAc,EACb,kBAACuC,GAAA,EAAD,CAAS/J,MAAM,UACb,kBAACqB,EAAA,EAAD,CAAYQ,QAtCF,WAChB,IAAI6C,EAAI,eAAQ3B,GAChBT,QAAQC,IAAIoH,GACZA,EAASK,SAAQ,SAACC,GAChBvF,EAAKuF,GAAW,KAElB2F,EAAelL,EAAMhC,EAAKK,aAC1B6G,EAAY,KA+B0BtI,aAAW,UACzC,kBAAC,KAAD,QAIJ,gCAcFzB,GAAY3B,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CAEJK,OAAQ,IAEV0L,MAAO,CACLtL,aAAc,GACdI,MAAO,OACPmL,aAAcjM,EAAM0K,QAAQ,IAE9BwB,MAAO,GAGP3B,eAAgB,CACd4B,OAAQ,EACRC,KAAM,gBACN/K,OAAQ,EACRf,QAAS,EACT+L,SAAU,SACV1C,QAAS,EACT9F,SAAU,WACVyI,IAAK,GACLxL,MAAO,OAKI,SAASuR,GAAT,GAA4D,IAAhCzN,EAA+B,EAA/BA,YAAa6M,EAAkB,EAAlBA,eAChDjF,EAAO0F,OAAOC,QAAQvN,GACzBwN,QAAO,SAAC3L,GAAD,OAAgB,IAATA,EAAE,MAChBgB,KAAI,SAAC6K,GAAD,OA/NWZ,EA+NUY,EAAK,GA/NVC,EA+NcD,EAAK,GA9NnC,CAAEZ,MAAKa,gBADhB,IAAoBb,EAAKa,KAiOjBvR,EAAUU,KALwD,EAM9CO,IAAMC,SAAS,OAN+B,mBAMjEkH,EANiE,KAM1DsD,EAN0D,OAO1CzK,IAAMC,SAAS,gBAP2B,mBAOjE2G,EAPiE,KAOxD8D,EAPwD,OAQxC1K,IAAMC,SAAS,IARyB,mBAQjEsJ,EARiE,KAQvDC,EARuD,OAShDxJ,IAAMC,SAAS,GATiC,mBASjE0K,EATiE,KAS3DC,EAT2D,OAUlC5K,IAAMC,SAAS,GAVmB,mBAUjE4K,EAViE,KAUpDC,EAVoD,KA0DlEC,EACJF,EAAcG,KAAKC,IAAIJ,EAAaN,EAAKW,OAASP,EAAOE,GAE3D,OACE,yBAAK7L,UAAWD,EAAQf,MACtB,kBAACmN,GAAA,EAAD,CAAOnM,UAAWD,EAAQgL,OACxB,kBAAC,GAAD,CACE3C,YAAamC,EAAS2B,OACtB3B,SAAUA,EACVC,YAAaA,EACb7G,YAAaA,EACb6M,eAAgBA,IAElB,kBAACpE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACErM,UAAWD,EAAQkL,MACnBqB,kBAAgB,UAChBxF,KAAK,QACL5E,aAAW,kBAEX,kBAAC,GAAD,CACEnC,QAASA,EACTqI,YAAamC,EAAS2B,OACtB/D,MAAOA,EACPP,QAASA,EACTM,iBAjEiB,SAAC9E,GAC5B,GAAIA,EAAMyC,OAAOgD,QAAjB,CACE,IAAM0D,EAAehB,EAAK/E,KAAI,SAACgG,GAAD,OAAOA,EAAEiE,OACvCjG,EAAY+B,QAGd/B,EAAY,KA4DFlC,cAxEc,SAAClF,EAAOiG,GAEhCoC,EADc7D,IAAYyB,GAAsB,QAAVlB,EACrB,OAAS,OAC1BuD,EAAWrC,IAsEDhB,SAAUkD,EAAKW,SAEjB,kBAACO,GAAA,EAAD,KA/RZ,SAAoBC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMlG,KAAI,SAACqG,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAMrD,OALAF,EAAeG,MAAK,SAACrF,EAAGC,GACtB,IAAMQ,EAAQwE,EAAWjF,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVQ,EAAoBA,EACjBT,EAAE,GAAKC,EAAE,MAEXiF,EAAepG,KAAI,SAACqG,GAAD,OAAQA,EAAG,MAyRxBG,CAAWzB,EAtS1B,SAAuBpD,EAAOP,GAC5B,MAAiB,SAAVO,EACH,SAACT,EAAGC,GAAJ,OAAUF,GAAqBC,EAAGC,EAAGC,IACrC,SAACF,EAAGC,GAAJ,OAAWF,GAAqBC,EAAGC,EAAGC,IAmSZqF,CAAc9E,EAAOP,IACpCsF,MAAMvB,EAAOE,EAAaF,EAAOE,EAAcA,GAC/CrF,KAAI,SAAC2G,EAAKL,GACT,IAnCIjC,EAmCEuC,GAnCFvC,EAmC8BsC,EAAIsD,KAnCS,IAA/BlG,EAAS8C,QAAQxC,IAoC3ByC,EAAO,kCAA8BR,GAE3C,OACE,kBAACtE,GAAA,EAAD,CACE+E,OAAK,EACL9K,QAAS,SAACW,GAAD,OAtET,SAACA,EAAOyH,GAC1B,IAAM2C,EAAgBjD,EAAS8C,QAAQxC,GACnC4C,EAAc,IAEK,IAAnBD,EACFC,EAAcA,EAAYC,OAAOnD,EAAUM,GAChB,IAAlB2C,EACTC,EAAcA,EAAYC,OAAOnD,EAAS2C,MAAM,IACvCM,IAAkBjD,EAAS2B,OAAS,EAC7CuB,EAAcA,EAAYC,OAAOnD,EAAS2C,MAAM,GAAI,IAC3CM,EAAgB,IACzBC,EAAcA,EAAYC,OACxBnD,EAAS2C,MAAM,EAAGM,GAClBjD,EAAS2C,MAAMM,EAAgB,KAInChD,EAAYiD,GAqD0BE,CAAYvK,EAAO+J,EAAIsD,MAC3C7C,KAAK,WACLC,eAAcT,EACdU,UAAW,EACXpH,IAAKyG,EAAIsD,IAAMtD,EAAIsD,IAAM,SACzBlG,SAAU6C,GAEV,kBAAC3E,GAAA,EAAD,CAAWC,QAAQ,YACjB,kBAACC,GAAA,EAAD,CACEE,QAASuE,EACTtE,WAAY,CAAE,kBAAmBwE,MAGrC,kBAAC7E,GAAA,EAAD,CAAWO,MAAM,OAAON,QAAQ,QAC7ByE,EAAIsD,KAEP,kBAAChI,GAAA,EAAD,CACEiC,UAAU,KACV1E,GAAIsH,EACJtE,MAAM,SACN+E,MAAM,OAELZ,EAAImE,kBAKdvF,EAAY,GACX,kBAACvD,GAAA,EAAD,CAAUrI,MAAO,CAAEC,OAAQ,GAAK2L,IAC9B,kBAACtD,GAAA,EAAD,CAAWuF,QAAS,QAM9B,kBAACC,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BxD,UAAU,MACVyD,MAAO5C,EAAKW,OACZL,YAAaA,EACbF,KAAMA,EACNyC,aA3FiB,SAAChL,EAAOiL,GAC/BzC,EAAQyC,IA2FFC,oBAxFwB,SAAClL,GAC/B0I,EAAeyC,SAASnL,EAAMyC,OAAOC,MAAO,KAC5C8F,EAAQ,Q,YC5RN2F,GAAkBC,cAAW,SAACzS,GAAD,MAAY,CAC7C0S,KAAM,CACJ1H,gBAAiBhL,EAAM6K,QAAQ8H,OAAOC,MACtCvP,MAAOrD,EAAM6K,QAAQ8H,OAAOE,OAE9BC,KAAM,CACJ/N,SAAU,OANU0N,CAQpB/I,MAEEqJ,GAAiBN,cAAW,SAACzS,GAAD,MAAY,CAC5CC,KAAM,CACJ,qBAAsB,CACpB+K,gBAAiBhL,EAAM6K,QAAQmI,OAAOxE,WAHrBiE,CAMnBhJ,MAEE/H,GAAY3B,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJK,OAAQN,EAAM0K,QAAQ,IAExBwB,MAAO,CACL2D,SAAU,SAIRoD,GAAW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAEtC,SAASC,GAAT,GAA4C,IAAvBrO,EAAsB,EAAtBA,UAAW6K,EAAW,EAAXA,QACvC1O,EAAUU,KAEhB,OACE,kBAAC2L,GAAA,EAAD,CAAgBpM,UAAWD,EAAQf,KAAM0L,UAAWyB,MAClD,kBAACE,GAAA,EAAD,CAAOrM,UAAWD,EAAQkL,MAAO/I,aAAW,oBAC1C,kBAACqG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC+I,GAAD,CAAiB7K,IAAK,MAAQ+H,GAA9B,WACWA,GAEV7K,EACCA,EAAU,GAAG4C,KAAI,SAACiK,EAAKyB,GAAN,OACf,kBAACX,GAAD,CAAiB7K,IAAK,WAAa+H,EAAUyD,EAAGlJ,MAAM,SAAtD,WACWkJ,EAAI,MAIjB,kBAACX,GAAD,CAAiB7K,IAAK,WAAa+H,MAIzC,kBAAChC,GAAA,EAAD,KACG7I,EAAU4C,KAAI,SAAC2G,EAAK+E,GAAN,OACb,kBAACJ,GAAD,CAAgBpL,IAAKwL,EAAIzD,GACvB,kBAAC8C,GAAD,CACE7K,IAAKsL,GAASE,GAAKzD,EACnB/D,UAAU,KACVqD,MAAM,UAELiE,GAASE,IAEX/E,EAAI3G,KAAI,SAAC2L,EAAGC,GAAJ,OACP,kBAACb,GAAD,CAAiB7K,IAAKyL,EAAIC,EAAI3D,EAASzF,MAAM,SAC1CmJ,GAAQ,kB,cCtDrB1R,I,OAAY3B,aAAW,SAACC,GAAD,MAAY,CACvCsT,WAAY,CACVpT,QAAS,OACTqT,SAAU,WACVpT,eAAgB,eAChBI,UAAW,IAEboE,SAAU,CACR7D,MAAO,OACPR,OAAQ,SAEVkT,UAAW,CACTvH,aAAc,IAEhBwH,QAAS,CACP5P,SAAU,WACV3D,QAAS,OACTC,eAAgB,UAElBuT,eAAgB,CACd7P,SAAU,WACVyI,IAAK,WAIHqH,GAAe,CAAEC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,GA0OrDC,GAxOF,WACX,IACMC,EADK7Q,IAAS8Q,YACDC,WAAW/Q,IAASC,OAAOC,YAAY8Q,KACpDtT,EAAUU,KAHC,EAKeQ,mBAAS,IALxB,mBAKVsC,EALU,KAKAa,EALA,OAMenD,mBAAS,IANxB,mBAMVuC,EANU,KAMAwD,EANA,OAOe/F,mBAAS,IAPxB,mBAOVwC,EAPU,KAOAyD,EAPA,OAQejG,mBAAS,IARxB,mBAQVyC,EARU,KAQAuL,EARA,OASqBhO,mBAASyR,IAT9B,mBASV/O,EATU,KASG6M,EATH,OAUavP,oBAAS,GAVtB,mBAUVqS,EAVU,KAUDC,EAVC,OAWiBtS,wBAASuS,GAX1B,mBAWVC,EAXU,KAWCC,EAXD,KAaXC,EAAW,SAACC,EAAKC,GACrB,OAAQA,GACN,IAAK,WACHzP,EAAYwP,GACZ,MACF,IAAK,WACH5M,EAAY4M,GACZ,MACF,IAAK,WACH1M,EAAY0M,GACZ,MACF,IAAK,WACH3E,EAAY2E,GACZ,MACF,IAAK,cACHpD,EAAeoD,GACf,MACF,QACE1Q,QAAQgD,MAAM,kBAElBgN,EACGY,IAAID,GACJE,IAAIF,IAAYvQ,EAAKK,YAAciQ,EAA/B,eAA0C3C,OAAO2C,KACrDI,MAAK,SAACxO,GAAD,OAAOtC,QAAQC,IAAI,YACxB8Q,OAAM,SAACzO,GAAD,OAAOtC,QAAQgD,MAAM,QAASV,OAGnC0O,EAAiBC,sBAAW,sBAAC,gCAAAzM,EAAA,6DAC3B0M,EAAK/R,IAAS8Q,YACdD,EAAUkB,EAAGhB,WAAW/Q,IAASC,OAAOC,YAAY8Q,KAEpD/N,EAAO,GAJoB,SAM3B4N,EACHY,IAAIxQ,EAAKM,WACTwP,WAAW9P,EAAKM,WAChBgE,QAAQvF,IAAS8Q,UAAUkB,UAAUC,cACrCC,YAAW,SAACC,GACX,IAAKA,EAASC,MAAO,CACnB,IAAMC,EAAS,GACfF,EAAS5J,SAAQ,SAAC+J,GAChBrP,EAAKqP,EAAK3O,IAAMiL,OAAO2D,OAAOD,EAAKE,QACnCH,EAAOjP,KAAKkP,EAAK3O,OAEnB0N,EAAapO,OAjBc,2CAoBhC,IAEGwP,EAAeX,sBAAW,sBAAC,4BAAAzM,EAAA,sDACzB0M,EAAK/R,IAAS8Q,YACJiB,EAAGhB,WAAW/Q,IAASC,OAAOC,YAAY8Q,KAEvD0B,MACAf,MAAK,SAACgB,GACLA,EAASpK,SAAQ,SAACkJ,GAChB,IAAMmB,EACJnB,EAAI9N,KAAO1C,EAAKK,YACZmQ,EAAIe,OACJ5D,OAAO2D,OAAOd,EAAIe,QACxB,OAAQf,EAAI9N,IACV,KAAK1C,EAAKC,SACRa,EAAY6Q,GACZ,MACF,KAAK3R,EAAKE,SACRwD,EAAYiO,GACZ,MACF,KAAK3R,EAAKG,SACRyD,EAAY+N,GACZ,MACF,KAAK3R,EAAKI,SACRuL,EAAYgG,GACZ,MACF,KAAK3R,EAAKK,YACR6M,EAAeyE,GACf,MAEF,QACE/R,QAAQgD,MAAM,yBAIrB+N,OAAM,SAACzO,GAAD,OAAOtC,QAAQC,IAAI,MAAOqC,MAjCJ,2CAkC9B,IAEHxE,IAAMkU,WAAU,WACdJ,IACAZ,MACC,CAACY,EAAcZ,IA0BlB,OADAhR,QAAQC,IAAIsQ,GAEV,6BACE,kBAAC1S,EAAD,MACA,yBAAKf,UAAWD,EAAQsS,YACtB,6BACE,kBAAClO,EAAD,CACEnE,UAAWD,EAAQoV,KACnB5R,SAAUA,EACVa,YAAauP,EACbrQ,KAAMA,IAER,kBAACgI,GAAD,CACE/H,SAAUA,EACVa,YAAauP,EACbE,QAASvQ,KAGb,6BACE,kBAACyD,EAAD,CACE/G,UAAWD,EAAQoV,KACnB3R,SAAUA,EACVwD,YAAa2M,EACbrQ,KAAMA,IAER,kBAACkL,GAAD,CACEhL,SAAUA,EACVwD,YAAa2M,EACbrQ,KAAMA,KAGV,6BACE,kBAAC2D,GAAD,CACEjH,UAAWD,EAAQoV,KACnB1R,SAAUA,EACVyD,YAAayM,EACbrQ,KAAMA,IAER,kBAACoL,GAAD,CACEjL,SAAUA,EACVyD,YAAayM,EACbrQ,KAAMA,KAIV,yBAAKtD,UAAWD,EAAQ2D,UACtB,kBAACsL,GAAD,CACEtL,SAAUA,EACVuL,YAAa0E,EACbrQ,KAAMA,EACNC,SAAUA,EACVC,SAAUA,EACVC,SAAUA,IAEZ,kBAAC4M,GAAD,CACE3M,SAAUA,EACVuL,YAAa0E,EACbrQ,KAAMA,KAGV,6BACE,kBAACiN,GAAD,CACE5M,YAAaA,EACb6M,eAAgBmD,EAChBnQ,SAAUA,EACVF,KAAMA,IAER,kBAAC8N,GAAD,CACEzN,YAAaA,EACb6M,eAAgBmD,EAChBrQ,KAAMA,MAIZ,yBAAKtD,UAAWD,EAAQyS,SACtB,kBAAC3L,EAAA,EAAD,CACE9D,QAAQ,YACRX,MAAM,YACN0E,KAAK,QACL9G,UAAWD,EAAQwS,UACnB9P,QAvGe,WACrB,IAAM2S,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BzD,KAAM0D,KAAKC,UAAU,CAAEC,OAAQpT,IAASC,OAAOC,YAAY8Q,OAE7DE,GAAW,GACXmC,MAAM,iCAAkCN,GACrCpB,MAAK,SAAC2B,GAAD,OAAcA,EAASC,UAC5B5B,KAFH,sBAEQ,sBAAAtM,EAAA,sDACJwM,IACAX,GAAW,GAFP,4CAILU,OAAM,SAACzO,GACNtC,QAAQC,IAAIqC,GACZ+N,GAAW,OAyFTrD,UAAWxM,EAASwI,QAAUoH,GANhC,sBAUCA,GACC,kBAACuC,GAAA,EAAD,CACEzT,MAAM,YACN0E,KAAM,GACN9G,UAAWD,EAAQ0S,kBAIzB,yBAAKzS,UAAWD,EAAQsS,YACrBoB,EACCxC,OAAO6E,KAAKrC,GAAWjN,KAAI,SAACuP,EAAK7D,GAAN,OACzB,kBAACD,GAAD,CAAWrO,UAAW6P,EAAUsC,GAAMtH,QAASsH,EAAKrP,IAAKqP,OAG3D,iCCtQV1T,IAAS2T,cAAc,CACrBC,OAAQ,0CACRC,WAAY,4CACZC,YAAa,mDACbC,UAAW,4BACXC,cAAe,wCACfC,kBAAmB,gBACnBC,MAAO,+CAGT,IAAMC,GAAmB,CACvBC,UAAW,CACTC,OAAQ,CACN5Q,MAAO,IACP6Q,QAAS,CACPC,QAAQ,EACRC,WAAY,QAgDLC,G,4MAzCbC,MAAQ,CAAEC,YAAY,G,EACtBC,SAAW,CACTC,WAAY,QACZC,cAAe,CACb9U,IAASC,KAAK8U,mBAAmBC,YACjChV,IAASC,KAAKgV,kBAAkBD,YAChChV,IAASC,KAAKiV,qBAAqBF,aAErCG,UAAW,CACTC,4BAA6B,kBAAM,K,EAIvCC,kBAAoB,WAClBrV,IAASC,OAAOqV,oBAAmB,SAACC,GAClC,EAAKC,SAAS,CAAEb,aAAcY,Q,uDAKhC,OACE,yBAAK5X,UAAU,OACZ8X,KAAKf,MAAMC,WACV,kBAAC,GAAD,MAEA,6BACE,kBAAC,IAAD,CAAWhX,UAAU,YAAY+X,OAAQvB,KACzC,kBAAC,EAAD,MACA,yBAAKxW,UAAU,cACb,kBAAC,IAAD,CACEiX,SAAUa,KAAKb,SACfe,aAAc3V,IAASC,gB,GAhCrB2V,aCnBE5W,QACW,cAA7B6W,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5E,MAAK,SAAA6E,GACJA,EAAaC,gBAEd7E,OAAM,SAAA/N,GACLhD,QAAQgD,MAAMA,EAAM6S,c","file":"static/js/main.9cb34831.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/activity.f54fa458.png\";","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport activity from \"./activity.png\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      margin: \"2rem\",\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  Tilt: {\r\n    background: \"linear-gradient(89deg, #ff5edf 0%, #04c8de 100%)\",\r\n    borderRadius: \".25rem\",\r\n    boxShadow: \"0px 0px 8px 2px rgba( 0, 0, 0, 0.2 )\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      marginTop: \"20%\",\r\n      width: \"600px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Logo = () => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tilt\r\n        className={classes.Tilt}\r\n        options={{ max: 25 }}\r\n        style={{ height: 400, width: 600 }}\r\n      >\r\n        <div className=\"Tilt-inner pa3\">\r\n          <img\r\n            src={activity}\r\n            style={{ paddingTop: \"5px\" }}\r\n            alt=\"activity scheduling\"\r\n          ></img>\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport firebase from \"firebase\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    display: \"block\",\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimaryAppBar() {\r\n  const classes = useStyles();\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton\r\n          aria-label=\"Logged In User\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>\r\n          {firebase.auth().currentUser\r\n            ? firebase.auth().currentUser.displayName\r\n            : \"Ehmad\"}\r\n        </p>\r\n      </MenuItem>\r\n      <MenuItem\r\n        onClick={() => {\r\n          firebase.auth().signOut();\r\n        }}\r\n      >\r\n        <IconButton aria-label=\"SignOut\" color=\"inherit\">\r\n          <ExitToAppIcon />\r\n        </IconButton>\r\n        <p>Sign Out</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Activity Scheduler\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"Logged In User\"\r\n              aria-haspopup=\"true\"\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n              <div className=\"f3\">\r\n                {firebase.auth().currentUser\r\n                  ? firebase.auth().currentUser.displayName\r\n                  : \"Ehmad\"}\r\n              </div>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"Sign Out\"\r\n              aria-haspopup=\"true\"\r\n              onClick={() => {\r\n                firebase.auth().signOut();\r\n                console.log(\"signout\");\r\n              }}\r\n              color=\"inherit\"\r\n            >\r\n              <ExitToAppIcon />\r\n              <div className=\"f5\">Sign Out</div>\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\n","const docs = {\r\n  subjects: \"subjects\",\r\n  sections: \"sections\",\r\n  teachers: \"teachers\",\r\n  lectures: \"lectures\",\r\n  workingTime: \"workingTime\",\r\n  timeTable: \"timeTable\",\r\n};\r\n\r\nexport default docs;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TextField,\r\n  Card,\r\n  Button,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport docs from \"../../../constants/docs\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // minWidth: 275,\r\n    margin: 10,\r\n    borderRadius: 20,\r\n    minHeight: 360,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  textField: {\r\n    margin: 5,\r\n  },\r\n  hrs: {\r\n    margin: \"5% 10%\",\r\n  },\r\n  hours: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"baseline\",\r\n  },\r\n  button: {},\r\n}));\r\n\r\nexport default function SubjectInput({ subjects, setSubjects }) {\r\n  const classes = useStyles();\r\n\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [code, setCode] = React.useState(\"\");\r\n  const [contactHrs, setcontantHrs] = React.useState(\"\");\r\n  const [creditHrs, setcreditHrs] = React.useState(\"\");\r\n\r\n  const [titleError, setTitleError] = React.useState(\"\");\r\n  const [codeError, setCodeError] = React.useState(\"\");\r\n  const [contantHrsError, setcontantHrsError] = React.useState(\"\");\r\n  const [creditHrsError, setcreditHrsError] = React.useState(\"\");\r\n\r\n  const titleChange = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n  const codeChange = (event) => {\r\n    setCode(event.target.value);\r\n  };\r\n  const contacthrsChange = (event) => {\r\n    setcontantHrs(event.target.value);\r\n  };\r\n  const creditrsChange = (event) => {\r\n    setcreditHrs(event.target.value);\r\n  };\r\n  const setRequiredError = () => {\r\n    !title ? setTitleError(\"Required\") : setTitleError(\"\");\r\n    !code ? setCodeError(\"Required\") : setCodeError(\"\");\r\n    !contactHrs ? setcontantHrsError(\"Required\") : setcontantHrsError(\"\");\r\n    !creditHrs ? setcreditHrsError(\"Required\") : setcreditHrsError(\"\");\r\n  };\r\n  const setEmptyTextfields = () => {\r\n    setTitle(\"\");\r\n    setCode(\"\");\r\n    setcontantHrs(\"\");\r\n    setcreditHrs(\"\");\r\n\r\n    setTitleError(\"\");\r\n    setCodeError(\"\");\r\n    setcontantHrsError(\"\");\r\n    setcreditHrsError(\"\");\r\n  };\r\n  const addButton = () => {\r\n    let temp = [...subjects];\r\n    if (title && code && contactHrs && creditHrs) {\r\n      if (creditHrs <= contactHrs) {\r\n        if (temp) {\r\n          if (temp.findIndex((e) => e[1] === code) === -1)\r\n            temp.push([title, code, contactHrs, creditHrs]);\r\n          else {\r\n            setRequiredError();\r\n            setCodeError(\"Subject already exists\");\r\n            return;\r\n          }\r\n        } else temp = [[title, code, contactHrs, creditHrs]];\r\n        setSubjects(temp, docs.subjects);\r\n        setEmptyTextfields();\r\n      } else {\r\n        setcreditHrsError(\"Credits hrs must !> contact hrs\");\r\n      }\r\n    } else {\r\n      setRequiredError();\r\n    }\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <h3>Add Subject</h3>\r\n      <div>\r\n        <TextField\r\n          className={!titleError ? classes.textField : \"\"}\r\n          onChange={titleChange}\r\n          value={title}\r\n          required\r\n          id=\"course-title\"\r\n          label=\"Title\"\r\n          variant=\"outlined\"\r\n          error={!!titleError}\r\n          helperText={titleError}\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          required\r\n          className={!codeError ? classes.textField : \"\"}\r\n          value={code}\r\n          onChange={codeChange}\r\n          id=\"course-code\"\r\n          label=\"Course Code\"\r\n          variant=\"outlined\"\r\n          error={!!codeError}\r\n          helperText={codeError}\r\n        />\r\n      </div>\r\n      <div className={classes.hours}>\r\n        <TextField\r\n          type=\"number\"\r\n          className={!creditHrsError ? classes.hrs : \"\"}\r\n          id=\"credit-hours\"\r\n          label=\"Credit Hours\"\r\n          select\r\n          required\r\n          error={!!creditHrsError}\r\n          helperText={creditHrsError}\r\n          onChange={creditrsChange}\r\n          value={creditHrs}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant=\"outlined\"\r\n        >\r\n          {[1, 2, 3].map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          type=\"number\"\r\n          className={!contantHrsError ? classes.hrs : \"\"}\r\n          id=\"contact-hours\"\r\n          label=\"Contact Hours\"\r\n          select\r\n          required\r\n          error={!!contantHrsError}\r\n          helperText={contantHrsError}\r\n          onChange={contacthrsChange}\r\n          value={contactHrs}\r\n          onKeyDown={(e) => {\r\n            if (e.keyCode === 13) addButton();\r\n          }}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant=\"outlined\"\r\n        >\r\n          {[1, 2, 3].map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </div>\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"medium\"\r\n        onClick={addButton}\r\n      >\r\n        + Add Subject\r\n      </Button>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Card,  Button } from \"@material-ui/core\";\r\nimport docs from \"../../../constants/docs\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // minWidth: 275,\r\n    borderRadius: 20,\r\n    margin: 10,\r\n    minHeight: 360,\r\n    display: 'grid',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  textField: {\r\n    margin: 5,\r\n  },\r\n\r\n  button: {\r\n  },\r\n}));\r\n\r\nexport default function SectionInput({ sections, setSections }) {\r\n  const classes = useStyles();\r\n\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [code, setCode] = React.useState(\"\");\r\n\r\n  const [titleError, setTitleError] = React.useState(\"\");\r\n  const [codeError, setCodeError] = React.useState(\"\");\r\n\r\n  const titleChange = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n  const codeChange = (event) => {\r\n    setCode(event.target.value);\r\n  };\r\n\r\n  const setRequiredError = () => {\r\n    !title ? setTitleError(\"Required\") : setTitleError(\"\");\r\n    !code ? setCodeError(\"Required\") : setCodeError(\"\");\r\n  };\r\n\r\n  const setEmptyTextfields = () => {\r\n    setTitle(\"\");\r\n    setCode(\"\");\r\n\r\n    setTitleError(\"\");\r\n    setCodeError(\"\");\r\n  };\r\n  const addButton = () => {\r\n    let temp = [...sections];\r\n    if (title && code) {\r\n      if (temp) {\r\n        if (temp.findIndex((e) => e[1] === code) === -1)\r\n          temp.push([title, code]);\r\n        else {\r\n          setRequiredError();\r\n          setCodeError(\"Subject already exists\");\r\n          return;\r\n        }\r\n      } else temp = [[title, code]];\r\n\r\n      setSections(temp, docs.sections);\r\n      setEmptyTextfields();\r\n    } else {\r\n      setRequiredError();\r\n    }\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <h3>Add Section</h3>\r\n      <div>\r\n        <TextField\r\n          className={classes.textField}\r\n          required\r\n          id=\"class-title\"\r\n          label=\"Class Title\"\r\n          variant=\"outlined\"\r\n          value={title}\r\n          onChange={titleChange}\r\n          error={!!titleError}\r\n          helperText={titleError}\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          required\r\n          className={classes.textField}\r\n          id=\"class-code\"\r\n          label=\"Class Code\"\r\n          variant=\"outlined\"\r\n          error={!!codeError}\r\n          helperText={codeError}\r\n          value={code}\r\n          onChange={codeChange}\r\n          onKeyDown={(e) => {\r\n            if (e.keyCode === 13) addButton();\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"medium\"\r\n          onClick={addButton}\r\n        >\r\n          + Add Section\r\n        </Button>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Card, Button } from \"@material-ui/core\";\r\nimport docs from \"../../../constants/docs\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // minWidth: 275,\r\n    borderRadius: 20,\r\n    margin: 10,\r\n    minHeight: 360,\r\n    display: \"grid\",\r\n  },\r\n  textField: {\r\n    margin: 5,\r\n  },\r\n  button: {},\r\n}));\r\n\r\nexport default function TeacherInput({ teachers, setTeachers }) {\r\n  const classes = useStyles();\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [code, setCode] = React.useState(\"\");\r\n\r\n  const [nameError, setNameError] = React.useState(\"\");\r\n  const [codeError, setCodeError] = React.useState(\"\");\r\n\r\n  const nameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  const codeChange = (event) => {\r\n    setCode(event.target.value);\r\n  };\r\n\r\n  const setRequiredError = () => {\r\n    !name ? setNameError(\"Required\") : setNameError(\"\");\r\n    !code ? setCodeError(\"Required\") : setCodeError(\"\");\r\n  };\r\n\r\n  const setEmptyTextfields = () => {\r\n    setName(\"\");\r\n    setCode(\"\");\r\n\r\n    setNameError(\"\");\r\n    setCodeError(\"\");\r\n  };\r\n  const addButton = () => {\r\n    let temp = [...teachers];\r\n    if (name && code) {\r\n      if (temp) {\r\n        if (temp.findIndex((e) => e[1] === code) === -1)\r\n          temp.push([name, code]);\r\n        else {\r\n          setRequiredError();\r\n          setCodeError(\"Subject already exists\");\r\n          return;\r\n        }\r\n      } else temp = [[name, code]];\r\n\r\n      setTeachers(temp, docs.teachers);\r\n      setEmptyTextfields();\r\n    } else {\r\n      setRequiredError();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <h3>Add Teacher</h3>\r\n      <div>\r\n        <TextField\r\n          className={classes.textField}\r\n          required\r\n          id=\"teacher-name\"\r\n          label=\"Teacher Name\"\r\n          variant=\"outlined\"\r\n          value={name}\r\n          onChange={nameChange}\r\n          error={!!nameError}\r\n          helperText={nameError}\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          required\r\n          className={classes.textField}\r\n          id=\"teacher-code\"\r\n          label=\"Teacher Code\"\r\n          variant=\"outlined\"\r\n          error={!!codeError}\r\n          helperText={codeError}\r\n          value={code}\r\n          onChange={codeChange}\r\n          onKeyDown={(e) => {\r\n            if (e.keyCode === 13) addButton();\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"medium\"\r\n          onClick={addButton}\r\n        >\r\n          + Add Teacher\r\n        </Button>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport docs from \"../../../constants/docs\";\r\n\r\nfunction createData(name, code, contantHrs) {\r\n  return { name, code, contantHrs };\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Title\",\r\n  },\r\n  { id: \"code\", numeric: true, disablePadding: false, label: \"Code\" },\r\n  {\r\n    id: \"contantHrs\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Contact Hrs\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, selected, setSelected, subjects, setSubjects } = props;\r\n\r\n  const deleteRow = () => {\r\n    let temp = [...subjects];\r\n\r\n    selected.forEach((element) => {\r\n      let target = temp.findIndex((e) => e[1] === element);\r\n      temp.splice(target, 1);\r\n    });\r\n\r\n    setSubjects(temp, docs.subjects);\r\n    setSelected([]);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Subject Table\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton onClick={deleteRow} aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  selected: PropTypes.array,\r\n  setSelected: PropTypes.func,\r\n  subjects: PropTypes.array,\r\n  setSubjects: PropTypes.func,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // width: \"100%\",\r\n    margin: 10,\r\n  },\r\n  paper: {\r\n    borderRadius: 20,\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    // minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n// Subject Table Export\r\n\r\nexport default function SubjectTable({ subjects, setSubjects }) {\r\n  const rows = subjects\r\n    ? subjects.map((subject) => createData(subject[0], subject[1], subject[2]))\r\n    : createData(\"\", \"\", \"\");\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"code\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.code);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, code) => {\r\n    const selectedIndex = selected.indexOf(code);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, code);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          subjects={subjects}\r\n          setSubjects={setSubjects}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"subject\"\r\n            size=\"small\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.code);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.code)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.code ? row.code : \"rowCode\"}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        align=\"right\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.code}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.contantHrs}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 33 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport docs from \"../../../constants/docs\";\r\n\r\nfunction createData(name, code) {\r\n  return { name, code };\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Title\",\r\n  },\r\n  { id: \"code\", numeric: true, disablePadding: false, label: \"Code\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, selected, setSelected, sections, setSections } = props;\r\n\r\n  const deleteRow = () => {\r\n    let temp = [...sections];\r\n\r\n    selected.forEach((element) => {\r\n      let target = temp.findIndex((e) => e[1] === element);\r\n      temp.splice(target, 1);\r\n    });\r\n    setSections(temp, docs.sections);\r\n    setSelected([]);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Section Table\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton onClick={deleteRow} aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  selected: PropTypes.array,\r\n  setSelected: PropTypes.func,\r\n  sections: PropTypes.array,\r\n  setSections: PropTypes.func,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // width: \"100%\",\r\n    margin: 10,\r\n  },\r\n  paper: {\r\n    borderRadius: 20,\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    // minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n// Section Table Export Function\r\nexport default function SectionTable({ sections, setSections }) {\r\n  const rows = sections\r\n    ? sections.map((section) => createData(section[0], section[1]))\r\n    : [createData(\"\", \"\")];\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"code\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.code);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, code) => {\r\n    const selectedIndex = selected.indexOf(code);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, code);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          sections={sections}\r\n          setSections={setSections}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"subject\"\r\n            size=\"small\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.code);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.code)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.code ? row.code : \"rowCode\"}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        align=\"right\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.code}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 33 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport docs from \"../../../constants/docs\";\r\n\r\nfunction createData(name, code) {\r\n  return { name, code };\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Name\",\r\n  },\r\n  { id: \"code\", numeric: true, disablePadding: false, label: \"Code\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, selected, setSelected, teachers, setTeachers } = props;\r\n\r\n  const deleteRow = () => {\r\n    let temp = [...teachers];\r\n\r\n    selected.forEach((element) => {\r\n      let target = temp.findIndex((e) => e[1] === element);\r\n      temp.splice(target, 1);\r\n    });\r\n    setTeachers(temp, docs.teachers);\r\n    setSelected([]);\r\n  };\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Teacher Table\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton onClick={deleteRow} aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  selected: PropTypes.array,\r\n  setSelected: PropTypes.func,\r\n  teachers: PropTypes.array,\r\n  setTeachers: PropTypes.func,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // width: \"100%\",\r\n    margin: 10,\r\n  },\r\n  paper: {\r\n    borderRadius: 20,\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    // minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function TeacherTable({ teachers, setTeachers }) {\r\n  const rows = teachers\r\n    ? teachers.map((teacher) => createData(teacher[0], teacher[1]))\r\n    : [createData(\"\", \"\")];\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"code\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.code);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, code) => {\r\n    const selectedIndex = selected.indexOf(code);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, code);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          teachers={teachers}\r\n          setTeachers={setTeachers}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"subject\"\r\n            size=\"small\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.code);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.code)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.code ? row.code : \"rowCode\"}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        align=\"right\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.code}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 33 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TextField,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport docs from \"../../../constants/docs\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 275,\r\n    margin: 10,\r\n    borderRadius: 20,\r\n  },\r\n  content: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: \"5% 10%\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-around\",\r\n    },\r\n  },\r\n  textField: {\r\n    margin: 5,\r\n    minWidth: 200,\r\n  },\r\n  button: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: \"5%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst lectureArrangement = [[\"1\"], [\"1 - 1\", \"2\"], [\"1 - 1 - 1\", \"2 - 1\", \"3\"]];\r\nexport default function LectureInput({\r\n  lectures,\r\n  setLectures,\r\n  subjects,\r\n  sections,\r\n  teachers,\r\n}) {\r\n  const classes = useStyles();\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [section, setsection] = useState(\"\");\r\n  const [teacher, setteacher] = useState(\"\");\r\n  const [lectureArr, setlectureArr] = useState(\"\");\r\n\r\n  const [subjectError, setsubjectError] = useState(\"\");\r\n  const [sectionError, setsectionError] = useState(\"\");\r\n  const [teacherError, setteacherError] = useState(\"\");\r\n  const [lecturearrError, setlecturearrError] = useState(\"\");\r\n\r\n  const subjectChange = (event) => {\r\n    setlectureArr(\"\");\r\n    setsubject(event.target.value);\r\n  };\r\n\r\n  const sectionChange = (event) => {\r\n    setsection(event.target.value);\r\n  };\r\n\r\n  const teacherChange = (event) => {\r\n    setteacher(event.target.value);\r\n  };\r\n\r\n  const lecturesChange = (event) => {\r\n    setlectureArr(event.target.value);\r\n  };\r\n\r\n  const setRequiredError = () => {\r\n    !subject ? setsubjectError(\"Required\") : setsubjectError(\"\");\r\n    !teacher ? setteacherError(\"Required\") : setteacherError(\"\");\r\n    !section ? setsectionError(\"Required\") : setsectionError(\"\");\r\n    !lectureArr ? setlecturearrError(\"Required\") : setlecturearrError(\"\");\r\n  };\r\n\r\n  const setEmptyTextfields = () => {\r\n    setlectureArr(\"\");\r\n    setsubject(\"\");\r\n    setteacher(\"\");\r\n    setsection(\"\");\r\n\r\n    setsubjectError(\"\");\r\n    setteacherError(\"\");\r\n    setsectionError(\"\");\r\n    setlecturearrError(\"\");\r\n  };\r\n\r\n  const addButton = () => {\r\n    if (subject && teacher && section && lectureArr) {\r\n      let temp = [...lectures];\r\n      \r\n      if (lectures) {\r\n        if (\r\n          temp.findIndex(\r\n            (e) =>\r\n              e[4] === teacher + section ||\r\n              (e[1] === section && e[2] === subject)\r\n          ) === -1\r\n        )\r\n          temp.push([teacher, section, subject, lectureArr, teacher + section]);\r\n        else {\r\n          setRequiredError();\r\n          setteacherError(\"Lecture already exists\");\r\n          setsubjectError(\"Lecture already exists\");\r\n          setsectionError(\"Lecture already exists\");\r\n          return;\r\n        }\r\n      } else\r\n        temp = [[teacher, section, subject, lectureArr, teacher + section]];\r\n\r\n      setLectures(temp, docs.lectures);\r\n      setEmptyTextfields();\r\n    } else setRequiredError();\r\n  };\r\n\r\n  const selectedIndex = (array, element, index) =>\r\n    array[array.findIndex((e) => e[index] === element)];\r\n\r\n  const subjectIndex = selectedIndex(subjects, subject, 1);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.content}>\r\n        <h3 style={{ textAlign: \"left\" }}>Add Lectures</h3>\r\n        <div>\r\n          <TextField\r\n            type=\"number\"\r\n            className={classes.textField}\r\n            id=\"teacher\"\r\n            label=\"Teacher\"\r\n            select\r\n            required\r\n            error={!!teacherError}\r\n            helperText={teacherError}\r\n            onChange={teacherChange}\r\n            value={teacher}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            variant=\"outlined\"\r\n          >\r\n            {teachers.map((option) => (\r\n              <MenuItem\r\n                key={option[1] ? option[1] : \"teacher\"}\r\n                value={option[0]}\r\n              >\r\n                {option[0]}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n\r\n        <div>\r\n          <TextField\r\n            type=\"number\"\r\n            className={classes.textField}\r\n            id=\"section\"\r\n            label=\"Section\"\r\n            select\r\n            required\r\n            error={!!sectionError}\r\n            helperText={sectionError}\r\n            onChange={sectionChange}\r\n            value={section}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            variant=\"outlined\"\r\n          >\r\n            {sections.map((option) => (\r\n              <MenuItem\r\n                key={option[1] ? option[1] : \"section\"}\r\n                value={option[1]}\r\n              >\r\n                {option[1]}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n\r\n        <div>\r\n          <TextField\r\n            type=\"number\"\r\n            className={classes.textField}\r\n            id=\"subject\"\r\n            label=\"Subject\"\r\n            select\r\n            required\r\n            error={!!subjectError}\r\n            helperText={subjectError}\r\n            onChange={subjectChange}\r\n            value={subject}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            variant=\"outlined\"\r\n          >\r\n            {subjects.map((option) => (\r\n              <MenuItem\r\n                key={option[1] ? option[1] : \"subject\"}\r\n                value={option[1]}\r\n              >\r\n                {option[1]}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n\r\n        <div>\r\n          <TextField\r\n            type=\"number\"\r\n            className={classes.textField}\r\n            id=\"lecture\"\r\n            label=\"Lecture Arrangement\"\r\n            select\r\n            required\r\n            error={!!lecturearrError}\r\n            helperText={lecturearrError}\r\n            onChange={lecturesChange}\r\n            value={lectureArr}\r\n            disabled={!subject}\r\n            onKeyDown={(e) => {\r\n              if (e.keyCode === 13) addButton();\r\n            }}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            variant=\"outlined\"\r\n          >\r\n            {subject && subjectIndex ? (\r\n              lectureArrangement[subjectIndex[2] - 1].map((option) => (\r\n                <MenuItem key={option ? option : \"lecture\"} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))\r\n            ) : (\r\n              <MenuItem></MenuItem>\r\n            )}\r\n          </TextField>\r\n        </div>\r\n\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"medium\"\r\n          onClick={addButton}\r\n        >\r\n          + Add Lecture\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport docs from \"../../../constants/docs\";\r\n\r\nfunction createData(teacher, section, subject, arrangement, lectureID) {\r\n  return { teacher, section, subject, arrangement, lectureID };\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"teacher\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Teacher\",\r\n  },\r\n  { id: \"section\", numeric: true, disablePadding: false, label: \"Section\" },\r\n  {\r\n    id: \"subject\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Subject\",\r\n  },\r\n  //   {\r\n  //     id: \"arrangement\",\r\n  //     numeric: true,\r\n  //     disablePadding: false,\r\n  //     label: \"Arrangement\",\r\n  //   },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={\r\n              !headCell.numeric\r\n                ? \"left\"\r\n                : headCell.id === \"section\"\r\n                ? \"center\"\r\n                : \"right\"\r\n            }\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, selected, setSelected, lectures, setLectures } = props;\r\n\r\n  const deleteRow = () => {\r\n    let temp = [...lectures];\r\n\r\n    selected.forEach((element) => {\r\n      let target = temp.findIndex((e) => e[4] === element);\r\n      temp.splice(target, 1);\r\n    });\r\n\r\n    setLectures(temp, docs.lectures);\r\n    setSelected([]);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Lecture Table\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton onClick={deleteRow} aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  selected: PropTypes.array,\r\n  setSelected: PropTypes.func,\r\n  lectures: PropTypes.array,\r\n  setLectures: PropTypes.func,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // width: \"100%\",\r\n    margin: 10,\r\n  },\r\n  paper: {\r\n    borderRadius: 20,\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    // minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n// Lecture Table Export\r\nexport default function LectureTable({ lectures, setLectures }) {\r\n  const rows = lectures\r\n    ? lectures.map((lecture) =>\r\n        createData(lecture[0], lecture[1], lecture[2], lecture[3], lecture[4])\r\n      )\r\n    : [createData(\"\", \"\", \"\", \"\", \"\")];\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"lectureID\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.lectureID);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, lectureID) => {\r\n    const selectedIndex = selected.indexOf(lectureID);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, lectureID);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (element) => selected.indexOf(element) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          lectures={lectures}\r\n          setLectures={setLectures}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"teacher\"\r\n            size=\"small\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.lectureID);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.lectureID)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.lectureID ? row.lectureID : \"rowlectureID\"}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" padding=\"none\">\r\n                        {row.teacher}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        align=\"center\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.section}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.subject}</TableCell>\r\n                      {/* <TableCell align=\"right\">{row.arrangement}</TableCell> */}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 33 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TextField,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport docs from \"../../../constants/docs\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 275,\r\n    margin: 10,\r\n    borderRadius: 20,\r\n  },\r\n  content: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: \"5% 10%\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  textField: {\r\n    margin: 5,\r\n    minWidth: 200,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      minWidth: 150,\r\n    },\r\n  },\r\n  button: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: \"5%\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function WorkingtimeInput({\r\n  workingTime,\r\n  setworkingTime,\r\n  sections,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [day, setday] = useState(\"\");\r\n  const [period, setperiod] = useState(\"\");\r\n  // const [room, setroom] = useState(sections.length);\r\n\r\n  const [dayError, setdayError] = useState(\"\");\r\n  const [periodError, setperiodError] = useState(\"\");\r\n\r\n  const dayChange = (event) => {\r\n    setday(event.target.value);\r\n  };\r\n\r\n  const periodChange = (event) => {\r\n    setperiod(event.target.value);\r\n  };\r\n  // const roomChange = (event) => {\r\n  //   setroom(event.target.value);\r\n  // };\r\n\r\n  const setRequiredError = () => {\r\n    !day ? setdayError(\"Required\") : setdayError(\"\");\r\n    !period ? setperiodError(\"Required\") : setperiodError(\"\");\r\n  };\r\n\r\n  const setEmptyTextfields = () => {\r\n    setday(\"\");\r\n    setperiod(\"\");\r\n\r\n    setdayError(\"\");\r\n    setperiodError(\"\");\r\n  };\r\n\r\n  const addButton = () => {\r\n    if (day && period) {\r\n      let temp = { ...workingTime };\r\n      temp[day] = period;\r\n      // temp = temp.filter((value) => value !== day);\r\n      setworkingTime(temp, docs.workingTime);\r\n\r\n      setEmptyTextfields();\r\n    } else setRequiredError();\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.content}>\r\n        <h3 style={{ textAlign: \"left\" }}>Working Days & Periods</h3>\r\n\r\n        <div>\r\n          <TextField\r\n            type=\"number\"\r\n            className={classes.textField}\r\n            id=\"day\"\r\n            label=\"Day\"\r\n            select\r\n            required\r\n            error={!!dayError}\r\n            helperText={dayError}\r\n            onChange={dayChange}\r\n            value={day}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            variant=\"outlined\"\r\n          >\r\n            {Object.entries(workingTime)\r\n              .filter((e) => e[1] === 0)\r\n              .map((option) => (\r\n                <MenuItem key={option[0]} value={option[0]}>\r\n                  {option[0]}\r\n                </MenuItem>\r\n              ))}\r\n          </TextField>\r\n        </div>\r\n\r\n        <div>\r\n          <TextField\r\n            type=\"number\"\r\n            className={classes.textField}\r\n            id=\"periods\"\r\n            label=\"Periods(hr)\"\r\n            select\r\n            required\r\n            error={!!periodError}\r\n            helperText={periodError}\r\n            onChange={periodChange}\r\n            value={period}\r\n            onKeyDown={(e) => {\r\n              if (e.keyCode === 13) addButton();\r\n            }}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            variant=\"outlined\"\r\n          >\r\n            {[1, 2, 3, 4, 5, 6, 7].map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            type=\"number\"\r\n            className={classes.textField}\r\n            id=\"days\"\r\n            label=\"Rooms\"\r\n            select\r\n            required\r\n            // onChange={roomChange}\r\n            value={sections.length}\r\n            onKeyDown={(e) => {\r\n              if (e.keyCode === 13) addButton();\r\n            }}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            variant=\"outlined\"\r\n          >\r\n            {\r\n              <MenuItem key={\"rooms\"} value={sections.length}>\r\n                {sections.length}\r\n              </MenuItem>\r\n            }\r\n          </TextField>\r\n        </div>\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"medium\"\r\n          onClick={addButton}\r\n        >\r\n          +Add\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport docs from \"../../../constants/docs\";\r\n\r\nfunction createData(day, lectureCount) {\r\n  return { day, lectureCount };\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"day\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Day\",\r\n  },\r\n  {\r\n    id: \"lectureCount\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Lectures\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"center\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const {\r\n    numSelected,\r\n    selected,\r\n    setSelected,\r\n    workingTime,\r\n    setworkingTime,\r\n  } = props;\r\n\r\n  const deleteRow = () => {\r\n    let temp = { ...workingTime };\r\n    console.log(selected);\r\n    selected.forEach((element) => {\r\n      temp[element] = 0;\r\n    });\r\n    setworkingTime(temp, docs.workingTime);\r\n    setSelected([]);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Working Days\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton onClick={deleteRow} aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  selected: PropTypes.array,\r\n  setSelected: PropTypes.func,\r\n  workingTime: PropTypes.object,\r\n  setworkingTime: PropTypes.func,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // width: \"100%\",\r\n    margin: 10,\r\n  },\r\n  paper: {\r\n    borderRadius: 20,\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    // minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n// Section Table Export Function\r\nexport default function WorkingtimeTable({ workingTime, setworkingTime }) {\r\n  const rows = Object.entries(workingTime)\r\n    .filter((e) => e[1] !== 0)\r\n    .map((time) => createData(time[0], time[1]));\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"lectureCount\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.day);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, element) => {\r\n    const selectedIndex = selected.indexOf(element);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, element);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (element) => selected.indexOf(element) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          workingTime={workingTime}\r\n          setworkingTime={setworkingTime}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"subject\"\r\n            size=\"small\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.day);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.day)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.day ? row.day : \"rowDay\"}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" padding=\"none\">\r\n                        {row.day}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        align=\"center\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.lectureCount}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 33 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 360,\r\n  },\r\n}));\r\n\r\nconst weekDays = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\r\n\r\nexport default function Timetable({ timeTable, section }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer className={classes.root} component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell key={\"sec\" + section}>\r\n              Section {section}\r\n            </StyledTableCell>\r\n            {timeTable ? (\r\n              timeTable[0].map((day, i) => (\r\n                <StyledTableCell key={\"lectures\" + section + i} align=\"right\">\r\n                  Lecture {i + 1}\r\n                </StyledTableCell>\r\n              ))\r\n            ) : (\r\n              <StyledTableCell key={\"lectures\" + section}></StyledTableCell>\r\n            )}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {timeTable.map((row, i) => (\r\n            <StyledTableRow key={i + section}>\r\n              <StyledTableCell\r\n                key={weekDays[i] + section}\r\n                component=\"th\"\r\n                scope=\"column\"\r\n              >\r\n                {weekDays[i]}\r\n              </StyledTableCell>\r\n              {row.map((r, j) => (\r\n                <StyledTableCell key={r + j + section} align=\"right\">\r\n                  {r ? r : \"FREE\"}\r\n                </StyledTableCell>\r\n              ))}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PrimaryAppBar from './Appbar';\r\nimport SubjectInput from './InputCards/subjectInput';\r\nimport SectionInput from './InputCards/sectionInput';\r\nimport TeacherInput from './InputCards/teacherInput';\r\nimport SubjectTable from './Tables/subjectTable';\r\nimport SectionTable from './Tables/sectionTable';\r\nimport TeacherTable from './Tables/teacherTable';\r\nimport LectureInput from './lectures/lectureInput';\r\nimport LectureTable from './lectures/lectureTable';\r\nimport WorkingtimeInput from './InputCards/workingtimeInput';\r\nimport WorkingtimeTable from './Tables/workingtimeTable';\r\nimport Timetable from './timetable';\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\nimport './home.css';\r\nimport docs from '../../constants/docs';\r\nimport firebase from 'firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardHolder: {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n    justifyContent: 'space-evenly',\r\n    marginTop: 10,\r\n  },\r\n  lectures: {\r\n    width: '100%',\r\n    margin: '0% 5%',\r\n  },\r\n  genButton: {\r\n    marginBottom: 25,\r\n  },\r\n  wrapper: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonProgress: {\r\n    position: 'absolute',\r\n    top: '3%',\r\n  },\r\n}));\r\n\r\nconst weekSchedule = { MON: 0, TUE: 0, WED: 0, THU: 0, FRI: 0, SAT: 0 };\r\n\r\nconst Home = () => {\r\n  const db = firebase.firestore();\r\n  const userRef = db.collection(firebase.auth().currentUser.uid);\r\n  const classes = useStyles();\r\n\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [sections, setSections] = useState([]);\r\n  const [teachers, setTeachers] = useState([]);\r\n  const [lectures, setLectures] = useState([]);\r\n  const [workingTime, setworkingTime] = useState(weekSchedule);\r\n  const [loading, setloading] = useState(false);\r\n  const [timetable, settimetable] = useState(undefined);\r\n\r\n  const updateDB = (sub, docType) => {\r\n    switch (docType) {\r\n      case 'subjects':\r\n        setSubjects(sub);\r\n        break;\r\n      case 'sections':\r\n        setSections(sub);\r\n        break;\r\n      case 'teachers':\r\n        setTeachers(sub);\r\n        break;\r\n      case 'lectures':\r\n        setLectures(sub);\r\n        break;\r\n      case 'workingTime':\r\n        setworkingTime(sub);\r\n        break;\r\n      default:\r\n        console.error('Wrong Document');\r\n    }\r\n    userRef\r\n      .doc(docType)\r\n      .set(docType === docs.workingTime ? sub : { ...Object(sub) })\r\n      .then((e) => console.log('saved'))\r\n      .catch((e) => console.error('error', e));\r\n  };\r\n\r\n  const fetchTimetable = useCallback(async () => {\r\n    const db = firebase.firestore();\r\n    const userRef = db.collection(firebase.auth().currentUser.uid);\r\n\r\n    const temp = {};\r\n\r\n    await userRef\r\n      .doc(docs.timeTable)\r\n      .collection(docs.timeTable)\r\n      .orderBy(firebase.firestore.FieldPath.documentId())\r\n      .onSnapshot((snapshot) => {\r\n        if (!snapshot.empty) {\r\n          const lecSec = [];\r\n          snapshot.forEach((snap) => {\r\n            temp[snap.id] = Object.values(snap.data());\r\n            lecSec.push(snap.id);\r\n          });\r\n          settimetable(temp);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const fetchRecords = useCallback(async () => {\r\n    const db = firebase.firestore();\r\n    const userRef = db.collection(firebase.auth().currentUser.uid);\r\n    userRef\r\n      .get()\r\n      .then((snapShot) => {\r\n        snapShot.forEach((doc) => {\r\n          const records =\r\n            doc.id === docs.workingTime\r\n              ? doc.data()\r\n              : Object.values(doc.data());\r\n          switch (doc.id) {\r\n            case docs.subjects:\r\n              setSubjects(records);\r\n              break;\r\n            case docs.sections:\r\n              setSections(records);\r\n              break;\r\n            case docs.teachers:\r\n              setTeachers(records);\r\n              break;\r\n            case docs.lectures:\r\n              setLectures(records);\r\n              break;\r\n            case docs.workingTime:\r\n              setworkingTime(records);\r\n              break;\r\n\r\n            default:\r\n              console.error('Wrong Document');\r\n          }\r\n        });\r\n      })\r\n      .catch((e) => console.log('err', e));\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    fetchRecords();\r\n    fetchTimetable();\r\n  }, [fetchRecords, fetchTimetable]);\r\n\r\n  const generateButton = () => {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ userID: firebase.auth().currentUser.uid }),\r\n    };\r\n    setloading(true);\r\n    fetch('http://localhost:3001/generate', requestOptions)\r\n      .then((response) => response.json())\r\n      .then(async () => {\r\n        fetchTimetable();\r\n        setloading(false);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        setloading(false);\r\n      });\r\n  };\r\n  // console.log(subjects);\r\n  // console.log(sections);\r\n  // console.log(teachers);\r\n  // console.log(lectures);\r\n  // console.log(workingTime);\r\n  console.log(timetable);\r\n  return (\r\n    <div>\r\n      <PrimaryAppBar />\r\n      <div className={classes.cardHolder}>\r\n        <div>\r\n          <SubjectInput\r\n            className={classes.card}\r\n            subjects={subjects}\r\n            setSubjects={updateDB}\r\n            docs={docs}\r\n          />\r\n          <SubjectTable\r\n            subjects={subjects}\r\n            setSubjects={updateDB}\r\n            docType={docs}\r\n          />\r\n        </div>\r\n        <div>\r\n          <SectionInput\r\n            className={classes.card}\r\n            sections={sections}\r\n            setSections={updateDB}\r\n            docs={docs}\r\n          />\r\n          <SectionTable\r\n            sections={sections}\r\n            setSections={updateDB}\r\n            docs={docs}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TeacherInput\r\n            className={classes.card}\r\n            teachers={teachers}\r\n            setTeachers={updateDB}\r\n            docs={docs}\r\n          />\r\n          <TeacherTable\r\n            teachers={teachers}\r\n            setTeachers={updateDB}\r\n            docs={docs}\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.lectures}>\r\n          <LectureInput\r\n            lectures={lectures}\r\n            setLectures={updateDB}\r\n            docs={docs}\r\n            subjects={subjects}\r\n            sections={sections}\r\n            teachers={teachers}\r\n          />\r\n          <LectureTable\r\n            lectures={lectures}\r\n            setLectures={updateDB}\r\n            docs={docs}\r\n          />\r\n        </div>\r\n        <div>\r\n          <WorkingtimeInput\r\n            workingTime={workingTime}\r\n            setworkingTime={updateDB}\r\n            sections={sections}\r\n            docs={docs}\r\n          />\r\n          <WorkingtimeTable\r\n            workingTime={workingTime}\r\n            setworkingTime={updateDB}\r\n            docs={docs}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={classes.wrapper}>\r\n        <Button\r\n          variant='contained'\r\n          color='secondary'\r\n          size='large'\r\n          className={classes.genButton}\r\n          onClick={generateButton}\r\n          disabled={!lectures.length || loading}\r\n        >\r\n          Generate Timetable\r\n        </Button>\r\n        {loading && (\r\n          <CircularProgress\r\n            color='secondary'\r\n            size={38}\r\n            className={classes.buttonProgress}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={classes.cardHolder}>\r\n        {timetable ? (\r\n          Object.keys(timetable).map((sec, i) => (\r\n            <Timetable timeTable={timetable[sec]} section={sec} key={sec} />\r\n          ))\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\nimport Logo from \"./Logo/Logo\";\nimport Particles from \"react-particles-js\";\nimport \"tachyons\";\nimport Home from \"./Home/home\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBwPBLFoMMqwyUJcJewqLip4guij7CNjZg\",\n  authDomain: \"activity-scheduling-d6be4.firebaseapp.com\",\n  databaseURL: \"https://activity-scheduling-d6be4.firebaseio.com\",\n  projectId: \"activity-scheduling-d6be4\",\n  storageBucket: \"activity-scheduling-d6be4.appspot.com\",\n  messagingSenderId: \"1050964579186\",\n  appId: \"1:1050964579186:web:85db424e474670098b03eb\",\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 700,\n      },\n    },\n  },\n};\n\nclass App extends Component {\n  state = { isSignedIn: false };\n  uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccessWithAuthResult: () => false,\n    },\n  };\n\n  componentDidMount = () => {\n    firebase.auth().onAuthStateChanged((user) => {\n      this.setState({ isSignedIn: !!user });\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.isSignedIn ? (\n          <Home />\n        ) : (\n          <div>\n            <Particles className=\"particles\" params={particlesOptions} />\n            <Logo></Logo>\n            <div className=\"firebaseUI\">\n              <StyledFirebaseAuth\n                uiConfig={this.uiConfig}\n                firebaseAuth={firebase.auth()}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}